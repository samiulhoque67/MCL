@{
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}
<style>
    .dbody {
        background-color: whitesmoke;
    }


    .font-weight-bold {
        font-weight: bold;
        color: darkgreen;
    }

    .w-100 {
        width: 100%;
    }

    .d-flex {
        display: flex;
    }

    .align-items-center {
        align-items: center;
    }

    .justify-content-center {
        justify-content: center;
    }

    .link_total_bm {
        color: black;
        font-weight: bold;
    }

        .link_total_bm :hover {
            color: #0091EA !important;
            font-weight: bold;
        }

    .link_within_bm {
        color: green;
        font-weight: bold;
    }

        .link_within_bm :hover {
            color: #0091EA;
            font-weight: bold;
        }

    .link_out_bm {
        color: firebrick;
        font-weight: bold;
    }

        .link_out_bm :hover {
            color: #0091EA;
            font-weight: bold;
        }

    .global-search {
        height: 34px;
    }

    .btn-round {
        border-radius: 17px;
    }

    .box.box-solid.box-primary > .box-header {
        text-align: center;
    }

    .table-header {
        background-color: #8aa4af !important;
        color: darkblue !important;
        font-size: 13px;
    }

    .tableVen-striped > tbody > tr:nth-of-type(odd) {
        background-color: rgba(23, 250, 132, 0.01);
    }

    .selected-row {
        background-color: #dff0d8; /* Light green color to indicate selection */
    }
</style>

<div class="box box-primary box-body" ng-controller="VendorCSInfoCtrl">
    <div class="box-header with-border" style="font-family: Verdana; background: #E4E9E3; color: black; ">
        <i class="fa fa-user"></i>
        <h3 style="font-family: Verdana" class="box-title">Vendor CS Information</h3>

        <div class="box-tools pull-right">
            <div class="col-lg-12 pull-right">
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="toggleRefreshTable()" class="btn btn-warning btn-flat pull-right" ng-disabled="btnRefresh"><i class="fa fa-refresh" style="padding-right: 5px"></i>Refresh</button>
                </div>
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="SearchVendorReqModal()" class="btn btn-flat btn-primary pull-right " ng-disabled="btnSearch"><i class="fa fa-search" style="padding-right: 5px"></i>Search</button>
                </div>
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="Post()" class="btn btn-flat btn-primary pull-right " ng-disabled="btnSave"><i class="fa fa-save" style="padding-right: 5px"></i>   {{ VendorReq.VendorReqID ? 'Update' : 'Save' }}</button>
                </div>
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="Cancel()" class="btn btn-flat btn-primary pull-right " ng-disabled="btnSave"><i class="fa fa-save" style="padding-right: 5px"></i>Cancel</button>
                </div>
            </div>
        </div>
    </div>


    @*<div class="row" style="margin:1%;">
            <div class="col-md-2" ng-repeat="item in dashBoardResult">
                <div class="box box-primary box-solid">
                    <div class="box-header with-border" style="padding-top:5px;padding-bottom:5px">
                        <h3 class="box-title text-center" style="font-size: 110%;">{{item.ServiceCategoryName}}</h3>
                    </div>

                    <div class="dbody">
                        <div class="row justify-content-center align-items-center" style="height: 100%;">
                            <button id="{{item.ServiceCategoryID}}" ng-click="VendorSelect(item.ServiceCategoryID)" class="d-flex align-items-center justify-content-center w-100" style="border: none; background: none;">

                                    <h3 class="description-header font-weight-bold">{{item.ServicesCategoryCount}}</h3>
                             </button>
                        </div>
                        </div>
                    </div>
            </div>
        </div>*@


    <!--<div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;">
        <div class="row">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">
                <table st-table="CSClientDisplayedCollection" st-safe-src="CSClientList" class="table table-condensed table-bordered table-striped table-hover pnlView">
                    <thead>
                        <tr>
                            <th class="col-lg-3 col-md-3 col-sm-3" data-ng-click="sort('ClientName')">Client Name</th>
                            <th class="col-lg-2 col-md-2 col-sm-2" data-ng-click="sort('ClientReqNo')">Requisition No</th>
                            <th class="col-lg-2 col-md-2 col-sm-2" data-ng-click="sort('RequisitionDate')">Requisition Date</th>
                            <th class="col-lg-2 col-md-2 col-sm-2" data-ng-click="sort('NoOfVendor')">NoOfVendor</th>
                            <th class="col-lg-1 col-md-1 col-sm-1">Action</th>
                        </tr>-->
    @*<tr>
            <th><input st-search="ClientName" placeholder="Client Name" class="input-sm form-control" type="search" /></th>
            <th><input st-search="ClientReqNo" placeholder="Client Req.No" class="input-sm form-control" type="search" /></th>
        </tr>*@
    <!--</thead>
    <tbody>
        <tr ng-repeat="row in CSClientDisplayedCollection" ng-class=" {'selected-row': row.selected}" ng-style="getRowStyle(row)">
            <td class="hidden">{{row.ClientReqID}}</td>
            <td class="hidden">{{row.ClientID}}</td>
            <td class="col-lg-3 col-md-3 col-sm-3 text-left">{{row.ClientName}}</td>
            <td class="col-lg-2 col-md-2 col-sm-2 text-left">{{row.ClientReqNo}}</td>
            <td class="col-lg-2 col-md-2 col-sm-2 text-center">{{row.RequisitionDate}}</td>
            <td class="col-lg-2 col-md-2 col-sm-2 text-center">{{row.NoOfVendor}}</td>
            <td>
                <a class="btn col-center btn-sm btn-flat btn-success" ng-click="ClientSelect(row)">Details</a>
            </td>
        </tr>
    </tbody>
    <tfoot>-->
    @*<tr>
            <td colspan="11" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div></td>
        </tr>*@
    <!--</tfoot>
                </table>
            </div>
        </div>
    </div>-->




    <div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;" ng-if="p===2">
        <div class="row">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">

                <table st-table="GridDisplayCollection" st-safe-src="masterDataSetupGridData" style="width:100%;" class="tableVen table-condensed table-bordered  table-hover pnlView">

                    <thead>
                        <tr style="font-size: 15px;">
                            <th colspan="11" style="text-align: left; color: white; font-weight: bold">Requisition To Vendor List</th>
                        </tr>
                        <tr style="background-color: #84c1ad; color: darkblue; font-size: 13px;">
                            <th style="text-align: left;" st-sort="">Vendor Requisition No</th>
                            <th style="text-align: left;" st-sort="">Requisition Date</th>
                            <th style="text-align: left;" st-sort="">Client Name</th>
                            <th style="text-align: left;" st-sort="">Client Requisition No</th>
                            <th style="text-align: left;" st-sort="">Last Quotation Date</th>
                            <th style="text-align: left;" st-sort="">Action</th>

                        </tr>
                        @*<tr>
                                <th colspan="5"><input st-search="" placeholder="Search" class="input-sm form-control" type="search" /></th>
                            </tr>*@
                    </thead>
                    <tbody>
                        <tr ng-repeat="row in GridDisplayCollection"
                            ng-cloak
                            style="height:20px; font-size:13px;"
                            ng-class="{'selected-row': row.selected}"
                            ng-style="getRowStyle(row)">

                            <td class="hidden">{{row.Id}}</td>
                            <td class="col-lg-2">{{ row.VendorRequisitionNumber }} </td>
                            <td class="col-lg-2">{{row.RequisitionDate}}</td>
                            <td class="col-lg-2">{{row.ClientName}}</td>
                            <td class="col-lg-2">{{row.ClientRequisitionNumber}}</td>
                            <td class="col-lg-2">{{row.LastDateofQuotation}}</td>

                            <td class="col-lg-1 col-md-1 col-sm-1 text-center" style="font-weight:bold">
                                <button type="button" ng-click="selectInvitation(row)" data-dismiss="modal" title="Select">
                                    <i ng-show="!row.selected" class="fa fa-square-o"></i>
                                    <i ng-show="row.selected" class="fa fa-check-square-o"></i>
                                </button>
                            </td>
                        </tr>
                    </tbody>
                    <tfoot>
                        @*<tr>
                                <td colspan="11" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div></td>
                            </tr>*@
                    </tfoot>
                </table>
            </div>
        </div>
    </div>



    <div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;" ng-show="isRowSelected">
        <div class="row">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">


                @*<div ng-if="flagToShow" style="text-align:center">
                        <h4 style="color:red;">No data available!</h4>
                    </div>*@
                @* Master Table *@
                @*<div id="PndRecomAndApprovalTable" class="table-responsive">*@
                @*<h5 style="color:chocolate; font-weight:bold">No of Requisitions: {{prList[0].Row_count}}</h5>*@
                <table id="tableId" st-table="ReqWiseMaterialListCollection" st-safe-src="InvWiseMaterialList" class="tableVen table-condensed table-bordered  table-hover pnlView" style="width:100%;">
                    <thead>
                        <tr style="font-size: 15px;">
                            <th colspan="9" style="text-align: left; color: #000000; font-weight: bold">Requisition of {{PRmasterData.MaterialType.Material_Type_Code}} Material</th>
                        </tr>
                        <tr style="background-color: #84c1ad; color: darkblue; font-size: 13px;">
                            <th style="text-align: left;" st-sort="">Category Name</th>
                            <th style="text-align: left;" st-sort="">Item Code</th>
                            <th style="text-align: left;" st-sort="">Item Name</th>
                            <th style="text-align: left;" st-sort="">ReqQnty</th>
                            <th style="text-align: left;" st-sort="">ReqUnit</th>
                            <th style="text-align: left;" st-sort="">Description</th>
                            <th style="text-align: left;" st-sort="">DeliveryLocation</th>
                            <th style="text-align: left;" st-sort="">DeliveryDate</th>


                            <th>Action</th>

                        </tr>
                    </thead>
                    <tbody>
                        <tr id="rowID" ng-repeat="row in ReqWiseMaterialListCollection"
                            style="height:20px; font-size:13px;"
                            ng-class="{'selected-row': row.selected}"
                            ng-style="getRowStyle(row)">

                            <td class="col-lg-2 col-md-2 col-sm-2">{{row.ServiceCategoryName}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.ServiceItemID}}</td>
                            <td class="col-lg-2 col-md-2 col-sm-2">{{row.ServiceItemName}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.ReqQnty | number:3}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.ReqUnit}}</td>
                            <td class="col-lg-2 col-md-2 col-sm-2">{{row.Description}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.DeliveryLocation}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.DeliveryDate}}</td>


                            <td class="col-lg-1 col-md-1 col-sm-1 " style="font-weight:bold">
                                @*<button type="button" class="button-detail" ng-click="showDetailsOfPR(row)" data-dismiss="modal" title="Show detail">Detail  <i class="fa fa-info"> </i> </button>*@
                                <button type="button" ng-click="selectMaterial(row)" data-dismiss="modal" title="Select">
                                    <i ng-show="!row.selected" class="fa fa-square-o"></i>
                                    <i ng-show="row.selected" class="fa fa-check-square-o"></i>
                                </button>
                            </td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="9" class="text-center">
                            </td>
                        </tr>
                    </tfoot>
                </table>



                @*<div class="box-tools pull-right">
                        <button type="button" id="btnRefresh" data-ng-click="fetchfromgoogle()" class="btn btn-warning btn-flat pull-right" ng-disabled="loading"><i class="fa fa-refresh"></i> Fetch from Google</button>
                    </div>*@


                @*</div>*@
            </div>
        </div>
    </div>






    <div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;" ng-show="isMaterialRowSelected">
        <div class="row">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">



                <table id="tableId" st-table="MatWiseVendorListCollection" st-safe-src="MatWiseVendorList" class="tableVen table-condensed table-bordered  table-hover pnlView" style="width:100%;">
                    <thead>
                        <tr style="font-size: 15px;">
                            <th colspan="10" style="text-align: left; color: #000000; font-weight: bold">Requisition of {{PRmasterData.MaterialType.Material_Type_Code}} Material</th>
                        </tr>
                        <tr style="background-color: #84c1ad; color: darkblue; font-size: 13px;">
                            <th>Quotation No</th>
                            <th>Vendor Name</th>
                            <th>ProposeQty</th>
                            <th>Unit</th>
                            <th>QutnPrice</th>
                            
                            <th>Vat %</th>
                            <th>Vat Amnt</th>
                            <th>Total Price</th>
                            <th>Delivery Date</th>

                            <th>Action</th>

                        </tr>
                    </thead>
                    <tbody>
                        <tr id="rowID" ng-repeat="row in MatWiseVendorListCollection"
                            style="height:20px; font-size:13px;"
                            ng-class="{'selected-row': row.selected}"
                            ng-style="getRowStyle(row)">

                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.VendorQutnNo}}</td>
                            <td class="col-lg-2 col-md-2 col-sm-2">{{row.VendorName}}</td>

                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.QutnQnty | number:2}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.ReqUnit}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.QutnPrice | number:2}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.VatPerc | number:2}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.VatAmt | number:2}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1">{{row.TolAmt | number:3}}</td>

                            <td class="col-lg-2 col-md-2 col-sm-2">{{row.DeliveryDate}}</td>

                            <td class="col-lg-1 col-md-1 col-sm-1 " style="font-weight:bold">
                                @*<button type="button" class="button-detail" ng-click="showDetailsOfPR(row)" data-dismiss="modal" title="Show detail">Detail  <i class="fa fa-info"> </i> </button>*@
                                <button type="button" ng-click="selectVendor(row)" data-dismiss="modal" title="Select">
                                    <i ng-show="!row.selected" class="fa fa-square-o"></i>
                                    <i ng-show="row.selected" class="fa fa-check-square-o"></i>
                                </button>
                            </td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="9" class="text-center">
                            </td>
                        </tr>
                    </tfoot>
                </table>




                <div class="row">
                    <div class="row">
                        <div class="col-sm-1 col-md-1 col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label>CS Date</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="CSRecDate" name="CSRecDate" type="text" class="DatePicker form-control" placeholder="DD/MM/YYYY" ng-model="VendorCSInfo.CSRecDate" />
                            </div>



                        </div>

                        <div class="col-lg-2">
                            <div class="form-group">
                                <label>CS No:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="AutoCSNo" name="AutoCSNo" type="text" class="form-control" placeholder="Auto CS No" ng-model="VendorCSInfo.AutoCSNo" ng-readonly="true" />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-1 col-md-1 col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label>Operation:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <select data-ng-model="VendorCSInfo.Operation" class="form-control">
                                <option value="">-- None --</option>
                                <option value="Rec">Recommended</option>
                                <option value="Bck">Back</option>
                                <option value="Pst">Postponed</option>
                                <option value="Can">Cancel</option>
                            </select>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="QuotationFor">Note:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="Remarks" name="Remarks" type="text" data-ng-model="VendorCSInfo.Remarks" class="form-control" placeholder="Note for CS" />
                            </div>
                        </div>

                    </div>
                </div>



            </div>





        </div>
        </div>




















    <!--<div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;">
        <div class="row">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">
                <table st-table="VenCSItemGridDisplayCollection" st-safe-src="VenCSItemList" class="table table-condensed table-bordered table-striped table-hover pnlView">
                    <thead>
                        <tr>
                            <th style="text-align: left;" st-sort="">Item Code</th>
                            <th style="text-align: left;" st-sort="">Item Name</th>
                            <th style="text-align: left;" st-sort="">ReqQnty</th>
                            <th style="text-align: left;" st-sort="">ReqUnit</th>
                            <th style="text-align: left;" st-sort="">QutnQnty</th>
                            <th style="text-align: left;" st-sort="">QutnPrice</th>
                            <th style="text-align: left;" st-sort="">QutnAmt</th>
                            <th style="text-align: left;" st-sort="">VatPerc</th>
                            <th style="text-align: left;" st-sort="">VatAmt</th>
                            <th style="text-align: left;" st-sort="">TolAmt</th>-->
    @*<th style="text-align: left;">Action</th>*@
    <!--</tr>-->
    @*<tr>
            <th colspan="5"><input st-search="" placeholder="Search" class="input-sm form-control" type="search" /></th>
        </tr>*@
    <!--</thead>
    <tbody>
        <tr ng-repeat="row in VenCSItemGridDisplayCollection" ng-cloak style="font-size:12px;">
            <td class="hidden">{{row.index+1}}</td>
            <td class="hidden">{{row.VendorCSInfoItemID}}</td>
            <td class="hidden">{{row.VendorCSInfoID}}</td>
            <td class="col-lg-1" style="width:5%;">{{ row.ServiceItemID }} </td>
            <td class="col-lg-1" style="width:5%;">{{row.ServiceItemName}}</td>
            <td class="col-lg-1" style="width:6%;">{{row.ReqQnty | number:2}}</td>
            <td class="col-lg-1" style="width:5%;">{{row.ReqUnit}}</td>
            <td class="col-lg-1" style="width:6%;">{{row.QutnQnty}}</td>
            <td class="col-lg-1" style="width:6%;">{{row.QutnPrice}}</td>
            <td class="col-lg-1" style="width:6%;">{{row.QutnAmt}}</td>
            <td class="col-lg-1" style="width:6%;">{{row.VatPerc}}</td>
            <td class="col-lg-1" style="width:6%;">{{row.VatAmt}}</td>
            <td class="col-lg-1" style="width:6%;">{{row.TolAmt}}</td>
        </tr>
    </tbody>
    <tfoot>-->
    @*<tr>
            <td colspan="11" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div></td>
        </tr>*@
    <!--</tfoot>
                </table>
            </div>
        </div>
    </div>-->
    <!--<div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;">
        <div class="row">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">
                <table st-table="CSVendorDisplayedCollection" st-safe-src="CSVendorList" class="table table-condensed table-bordered table-striped table-hover pnlView">
                    <thead>
                        <tr>
                            <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('VendorName')">Vendor Name</th>
                            <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('ContactPerson')">Contact Person</th>
                            <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('ContactNumber')">Contact Number</th>
                            <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('VendorQutnNo')">VendorQutnNo</th>
                            <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('QuotationDate')">QuotationDate</th>
                            <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('TolQnty')">Total Quantity</th>
                            <th class="col-lg-1 col-md-1 col-sm-1">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="row in CSVendorDisplayedCollection" ng-cloak style="font-size:12px;">
                            <td class="hidden">{{row.index+1}}</td>
                            <td class="hidden">{{row.VendorQutnID}}</td>
                            <td class="hidden">{{row.VendorID}}</td>
                            <td class="col-lg-2 col-md-2 col-sm-2 text-center">{{row.VendorName}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.ContactPerson}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.ContactNumber}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.VendorQutnNo}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.QuotationDate}}</td>
                            <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.TolQnty}}</td>
                            <td class="col-lg-1" style="width:5%;">
                                <button type="button" class="btn col-center btn-sm btn-flat btn-success"
                                        ng-click="selectEntity(row); ItemSelect(row)"
                                        data-dismiss="modal"
                                        title="Select and Details">
                                    Select and Details
                                </button>


                            </td>

                        </tr>
                    </tbody>
                    <tfoot>-->
    @*<tr>
            <td colspan="11" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div></td>
        </tr>*@
    <!--</tfoot>
    </table>


                    <div class="row">
                        <div class="row">
                            <div class="col-sm-1 col-md-1 col-lg-1">
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label>CS Date</label>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <input id="CSRecDate" name="CSRecDate" type="text" class="DatePicker form-control" placeholder="DD/MM/YYYY" ng-model="VendorCSInfo.CSRecDate" />
                                </div>
                            </div>

                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label>CS No:</label>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <input id="AutoCSNo" name="AutoCSNo" type="text" class="form-control" placeholder="Auto CS No" ng-model="VendorCSInfo.AutoCSNo" ng-readonly="true" />
                                </div>
                            </div>
                        </div>

        <div class="row">
            <div class="col-sm-1 col-md-1 col-lg-1">
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    <label>Operation:</label>
                </div>
            </div>
            <div class="col-lg-3">
                <select data-ng-model="VendorCSInfo.Operation" class="form-control">
                    <option value="">-- None --</option>
                    <option value="Rec">Recommended</option>
                    <option value="Bck">Back</option>
                    <option value="Pst">Postponed</option>
                    <option value="Can">Cancel</option>
                </select>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    <label for="QuotationFor">Note:</label>
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    <input id="Remarks" name="Remarks" type="text" data-ng-model="VendorCSInfo.Remarks" class="form-control" placeholder="Note for CS" />
                </div>
            </div>-->
    @*<div class="col-lg-2">
            <div class="form-group">
                <label>Recommended by:</label>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="form-group">
                <input id="RecommendedBy" name="RecommendedBy" type="text" value={{dashBoardResult[0].ServiceCategoryName}} class="form-control" placeholder="RecommendedBy" ng-model="VendorCSInfo.RecommendedBy" />
            </div>
        </div>*@

    <!--</div>-->
    @*<div class="row">
            <div class="col-sm-1 col-md-1 col-lg-1">
            </div>
            <div class="col-lg-3 ">
                <div class="form-group">
                    <label for="QuotationFor">Note:</label>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="form-group">
                    <input id="Remarks" name="Remarks" type="text" data-ng-model="VendorCSInfo.Remarks" class="form-control" placeholder="Note for CS" />
                </div>
            </div>
        </div>*@

    <!--</div>






            </div>
        </div>
    </div>-->









  

        <div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;">
            <div class="row">
                <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">
                    <table st-table="ReqTermGridDisplayCollection" st-safe-src="ReqTermDataSetupGridData" class="table table-condensed table-bordered table-striped table-hover pnlView">
                        <thead>
                            <tr>
                                <th style="text-align: left;" st-sort="">Terms Code</th>
                                <th style="text-align: left;" st-sort="">Terms & Conditions</th>
                                <th style="text-align: left;">Action</th>
                            </tr>
                            @*<tr>
                                    <th colspan="5"><input st-search="" placeholder="Search" class="input-sm form-control" type="search" /></th>
                                </tr>*@
                        </thead>
                        <tbody>
                            <tr ng-repeat="row in ReqTermGridDisplayCollection" ng-cloak style="font-size:12px;">
                                <td class="hidden">{{row.VendorCSInfoTermsID}}</td>
                                <td class="hidden">{{row.VendorCSInfoID}}</td>
                                <td class="hidden">{{row.TermsID}}</td>
                                <td class="col-lg-1" style="width:5%;">{{row.TermsCode}}</td>
                                <td class="col-lg-1" style="width:6%;">{{row.TermsName}}</td>

                                <td class="col-lg-1" style="width:5%;">
                                    <button type="button" ng-if="row.VendorCSInfoTermsID" class="btn btn-xs btn-primary btn-flat btnEdit" data-ng-click="toggleReqTermEdit(row,$index)"><i class="fa fa-edit"></i> </button>
                                    <button type="button" ng-if="!row.VendorCSInfoTermsID" class="btn btn-xs btn-primary btn-flat btnEdit" data-ng-click="toggleReqTermEdit(row,$index)"><i class="fa fa-edit"></i> </button>
                                    <button type="button" class="btn btn-xs btn-primary btn-flat btnDelete" data-ng-click="toggleReqTermDelete(row,$index)"><i class="fa fa-remove"></i> </button>
                                </td>
                            </tr>
                        </tbody>
                        <tfoot>
                            @*<tr>
                                    <td colspan="11" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div></td>
                                </tr>*@
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">

        app.controller('VendorCSInfoCtrl', ['$scope', '$http', '$timeout', function ($scope, $http, $timeout) {

            $scope.vendorCSItemArray = [];
            $scope.vendorCSTermArray = [];
            $scope.itemsByPage = 10;

            $scope.dashBoardResult = {};

        //$http.get('/VendorCSInfo/GetVendorCSInfoDashBordData')
        //    .success(function (response) {
        //        $scope.loading = false;
        //        $scope.dashBoardResult = response.result;
        //    }).error(function () { });



        $scope.masterDataSetupGridData = [];  // base collection
        $scope.GridDisplayCollection = [].concat($scope.masterDataSetupGridData);

        $scope.p = 2;


        $http.post('/VendorCSInfo/GetAllRequisition')
            .success(function (response) {
                $scope.Invitation = response.InvitationList;
                $scope.GridDisplayCollection = [].concat($scope.Invitation);
                console.log($scope.GridDisplayCollection);
                $scope.loading = false;
            }).error(function () {
                $scope.loading = false;
            });



        $scope.isRowSelected = false;

        $scope.selectInvitation = function (row) {
            // If the clicked row is already selected, toggle it off
            if ($scope.selectedRow === row) {
                row.selected = false;
                $scope.selectedRow = null;
                $scope.isRowSelected = false;
            }
            // If the clicked row is not selected, select it and unselect the previous one
            else {
                if ($scope.selectedRow) {


                    $scope.selectedRow.selected = false; // Unselect the previous row
                }


                row.selected = true;  // Select the current row
                $scope.selectedRow = row;
                $scope.isRowSelected = true;  // Set the current row as the selected one

                $scope.VendorCSInfo.VendorReqID = row.VendorRequisitionNumber;
                $scope.VendorCSInfo.ClientReqNo = row.ClientRequisitionNumber;
                $scope.VendorCSInfo.ClientReqID = row.ClientReqID;
                $scope.VendorCSInfo.ClientID = row.ClientID;
                $http.post('/VendorCSInfo/GetMaterialByRequisition',
                    { VendorRequisitionNumber: row.VendorRequisitionNumber })
                    .success(function (response) {
                        $scope.ReqWiseMaterialList = response.ReqWiseMaterialList;
                        $scope.ReqWiseMaterialListCollection = [].concat($scope.ReqWiseMaterialList);
                        console.log($scope.ReqWiseMaterialListCollection);
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });
            }
        };



        $scope.selectedMaterialRow = null;  // Track the selected row for material list
        $scope.isMaterialRowSelected = false;
        $scope.selectMaterial = function (row) {
            // If the clicked row is already selected, deselect it
            if ($scope.selectedMaterialRow === row) {
                row.selected = false;
                $scope.selectedMaterialRow = null;
                $scope.isMaterialRowSelected = false;// No row is selected
            } else {
                // If a different row was previously selected, deselect it
                if ($scope.selectedMaterialRow) {
                    $scope.selectedMaterialRow.selected = false;
                }
                // Select the current row
                row.selected = true;
                $scope.selectedMaterialRow = row;
                $scope.isMaterialRowSelected = true;
                $scope.VendorCSInfo.ServiceItemID = row.ServiceItemID;
                $scope.VendorCSInfo.ServiceCategoryID = row.ServiceCategoryID;
                $scope.VendorCSInfo.Description = row.Description;
                $scope.VendorCSInfo.DeliveryDate = row.DeliveryDate;
                $scope.VendorCSInfo.DeliveryLocation = row.DeliveryLocation;
                $scope.VendorCSInfo.DeliveryMode = row.DeliveryMode;

                /*            $scope.VendorCSInfo.ServiceItemName = row.ServiceItemName;*/



                $http.post('/VendorCSInfo/GetVendorByMaterial',
                    {
                        VendorReqID: row.VendorReqID,
                        ServiceItemID: row.ServiceItemID
                    })
                    .success(function (response) {
                        $scope.MatWiseVendorList = response.MatWiseVendorList;
                        $scope.MatWiseVendorListCollection = [].concat($scope.MatWiseVendorList);
                        console.log($scope.MatWiseVendorListCollection);
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });
            }
        };



        $scope.selectedVendors = [];  // Array to hold selected vendor items

        $scope.selectVendor = function (row) {
            var selectedVendorItem = {
                ServiceCategoryID: row.ServiceCategoryID,
                ServiceCategoryName: row.ServiceCategoryName,
                ServiceItemID: row.ServiceItemID,
                ServiceItemName: row.ServiceItemName,
                Description: row.Description,
                DeliveryLocation: row.DeliveryLocation,
                DeliveryDate: row.DeliveryDate,                // Date object
                Delivery_DateString: row.DeliveryDateString,    // Formatted string (e.g., 'yyyy/MM/dd')
                DeliveryMode: row.DeliveryMode,
                ReqQnty: row.ReqQnty,
                ReqUnit: row.ReqUnit,
                VendorQutnNo: row.VendorQutnNo,
                VendorQutnID: row.VendorQutnID,
                VendorID: row.VendorID,
                VendorName: row.VendorName,

                QutnQnty: row.QutnQnty,
                QutnPrice: row.QutnPrice,
                QutnUnit: row.QutnUnit,
                QutnAmt: row.QutnAmt,

                VatPerc: row.VatPerc,
                VatAmt: row.VatAmt,
                TolAmt: row.TolAmt
            };

            // Check if this vendor is already selected
            if (row.selected) {
                // Deselect the vendor and remove it from the selected array
                row.selected = false;
                $scope.ReqTermGridDisplayCollection = [];
                $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                var index = $scope.selectedVendors.findIndex(function (vendor) {
                    return vendor.VendorQutnID === row.VendorQutnID;
                });
                if (index !== -1) {
                    $scope.selectedVendors.splice(index, 1);  // Remove from selected array
                }
            } else {
                // Select the vendor and add it to the selected array
                row.selected = true;

                $http.post('/VendorCSInfo/GetVendorCSInfoTermList', { VendorQutnID: row.VendorQutnID })
                    .success(function (response) {
                        $scope.ReqTermDataSetupGridData = response.VendorCSInfoTermList;
                        $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });

                $scope.selectedVendors.push(selectedVendorItem);  // Add to selected array
            }
        };










        $scope.getRowStyle = function (row) {
            if (row.selected) {
                return { background: '#8bf5d2' }; // Change this to your desired color
            } else {
                return {}; // No additional styling
            }
        };















            //client info
            $scope.VendorSelect = function (ServiceCategoryID) {
                $scope.VendorCSInfo.ServiceCategoryID = ServiceCategoryID;
                $http.post("/VendorCSInfo/GetVendorCSClientInfo?ServiceCategoryID=" + ServiceCategoryID)
                    .success(function (response) {
                        $scope.CSClientList = response.CSClientList;
                        $scope.CSClientDisplayedCollection = [].concat($scope.CSClientList);
                    })
                    .error(function () { });
            };

            //Vendor info //need work here
            $scope.ClientSelect = function (row) {
                $scope.VendorCSInfo.ClientID = row.ClientID;
                $scope.VendorCSInfo.ClientReqID = row.ClientReqID;
                /*$scope.VendorCSInfo.VendorQutnID = row.VendorQutnID;*/
                row.selected = false;

                $http.post("/VendorCSInfo/GetVendorCSVendorsUsingClient", {
                    ClientID: row.ClientID,
                    VendorQutnID: row.VendorQutnID
                })
                    .then(function (response) {
                        row.selected = true;
                        $scope.CSVendorList = response.data.CSVendorList;
                        $scope.CSVendorDisplayedCollection = [].concat($scope.CSVendorList);
                        $scope.CSVendorDisplayedCollection.forEach(function (item, index) {
                            // Add an index field to each object
                            item.index = index + 1; // Adding 1 to start index from 1
                        });
                    })
                    .catch(function () {
                        console.error("Error retrieving vendor data.");
                    });
            };


            $scope.ItemSelect = function (row) {

            $http.post('/VendorCSInfo/GetVendorCSQuotationItem', {
                VendorID: row.VendorID,
                ClientID: $scope.VendorCSInfo.ClientID,
                VendorQutnItemID: row.VendorQutnItemID
            })
                .success(function (response) {
                    $scope.VenCSItemList = response.VenCSItemList;
                    $scope.VenCSItemGridDisplayCollection = [].concat($scope.VenCSItemList);
                })
                .error(function () { });
            //need work here
            $http.post('/VendorCSInfo/GetVendorCSInfoTermList', { VendorQutnID: row.VendorQutnID })
                .success(function (response) {
                    $scope.ReqTermDataSetupGridData = response.VendorCSInfoTermList;
                    $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                    $scope.loading = false;
                }).error(function () {
                    $scope.loading = false;
                });
        };

        $scope.VendorCSInfo = {
            VendorCSRecmID: "",
            ServiceItemID: "",
            ServiceCategoryID: "",
            VendorID: "",
            ClientReqID: "",
            ClientID: "",
            AutoCSNo: "",
            CSRecDate: "",
            Operation: "",
            RecommendedBy: "",
            Remarks: "",
            Status: "",
            VendorReqID: "",
            ClientReqNo: "",
            Description: "",
            DeliveryLocation: "",
            DeliveryDate: "",
            DeliveryMode: ""
        }

            $scope.VendorCSInfoItem = {
                VendorCSRecmItemID: "",
                VendorCSRecmID: "",
                //ServiceCategory: { ServiceCategoryID: "", ServiceCategoryName: "" },
                ServiceItem: { ServiceItemID: "", ServiceItemName: "" },
                ReqQnty: "",
                ReqUnit: "",
                QutnQnty: "",
                QutnPrice: "",
                QutnUnit: "",
                QutnAmt: "",
                VatPerc: "",
                VatAmt: "",
                TolAmt: ""
            }

            $scope.VendorCSVendorsItemWise = {
                VendorCSVendorsItemWiseID: "",
                VendorCSInfoID: "",
                VendorCSInfoItemID: "",
                VendorID: "",
                VendorName: "",
                TolQnty: "",
                VendorQutnID: "",
                //ContactPerson: "",
                //ContactNumber: "",
                //VendorTINNo: "",
                //VendorBINNo: "",
                //VendorEmail: "",
                //VendorAddress: "",
                //VenReqQnty: "",
                //VenReqUnit: "",
                Status: ""
            }

            $('.DatePicker').datepicker({
                format: "dd/mm/yyyy",
                autoclose: true
                // Set minDate to 0 to disable selecting previous dates
            });

            $('.DatePicker')
                .on('changeDate', function (ev) {
                    $('.datepicker').hide();
                });

            // ################# Detail Add Modal ####################
            $scope.AddReqItemModal = function () {

                if ($('#RequisitionNo').val() == "") {
                    toastr.error("Vendor ReqNo.  Required");
                    return;
                }

                if ($('#SubmissionDate').val() == "") {
                    toastr.error("Submission Date Required.");
                    return;
                }

                if ($('#RequisitionDate').val() == "") {
                    toastr.error("Requisition Date Date Required");
                    return;
                }
                $('#RequisitionItemModal').modal('show');
            };

            $scope.VenCSItemList = [];  // base collection
            $scope.VenCSItemGridDisplayCollection = [].concat($scope.VenCSItemList);

            $scope.AddReqItem = function () {

                if ($scope.VendorCSInfoItem.ServiceCategory.ServiceCategoryID == "") {
                    toastr.error("Service Category Required");
                    return;
                }

                if ($scope.VendorCSInfoItem.ServiceItem.ServiceItemID == "") {
                    toastr.error("Service Item  Required");
                    return;
                }

                if ($scope.VendorCSInfoItem.DeliveryMode == "") {
                    toastr.error("Submission Date Required.");
                    return;
                }

                if ($scope.VendorCSInfoItem.ReqUnit == "") {
                    toastr.error("Requisition Date Date Required");
                    return;
                }

                if ($('#DeliveryLocation').val() == "") {
                    toastr.error("Service Category Required");
                    return;
                }

                if ($('#DeliveryDate').val() == "") {
                    toastr.error("Service Item  Required");
                    return;
                }

                if ($('#Description').val() == "") {
                    toastr.error("Submission Date Required.");
                    return;
                }

                if ($('#ReqQnty').val() == "") {
                    toastr.error("Requisition Date Date Required");
                    return;
                }

                $scope.VendorCSInfoItem.ServiceCategoryID = $scope.VendorCSInfoItem.ServiceCategory.ServiceCategoryID;
                $scope.VendorCSInfoItem.ServiceCategoryName = $scope.VendorCSInfoItem.ServiceCategory.ServiceCategoryName;
                $scope.VendorCSInfoItem.ServiceItemID = $scope.VendorCSInfoItem.ServiceItem.ServiceItemID;
                $scope.VendorCSInfoItem.ServiceItemName = $scope.VendorCSInfoItem.ServiceItem.ServiceItemName;

                $scope.VendorCSInfoItem.DeliveryMode = $scope.VendorCSInfoItem.DeliveryMode;
                $scope.VendorCSInfoItem.ReqUnit = $scope.VendorCSInfoItem.ReqUnit;

                $scope.VendorCSInfoItem.DeliveryLocation = $('#DeliveryLocation').val();
                $scope.VendorCSInfoItem.DeliveryDate = $('#DeliveryDate').val();
                $scope.VendorCSInfoItem.Description = $('#Description').val();
                $scope.VendorCSInfoItem.ReqQnty = $('#ReqQnty').val();

                $scope.vendorCSItemArray.push($scope.VendorCSInfoItem);

                $scope.VenCSItemGridDisplayCollection = $scope.VenCSItemGridDisplayCollection.concat($scope.VendorCSInfoItem);

                $scope.resetVendorCSInfoItem();
                $("#btnAddReqItem").html('Add');
                $('#RequisitionItemModal').modal('hide');
            }

            $scope.resetVendorCSInfoItem = function () {
                $('#DeliveryDate').val('');
                $scope.VendorCSInfoItem = {
                    VendorCSInfoItemID: "",
                    VendorCSInfoID: "",
                    ServiceCategory: { ServiceCategoryID: "", ServiceCategoryName: "" },
                    ServiceItem: { ServiceItemID: "", ServiceItemName: "" },
                    Description: "",
                    DeliveryLocation: "",
                    DeliveryDate: "",
                    DeliveryMode: "",
                    ReqQnty: "",
                    ReqUnit: ""
                }
            }

            $scope.toggleClientReqSelect = function (tableRow) {
                $scope.VendorCSInfo.ClientReqID = tableRow.ClientReqID;
                $scope.VendorCSInfo.ClientID = tableRow.ClientID;
                $scope.VendorCSInfo.ClientName = tableRow.ClientName;
                $http.post('/ClientRequisition/GetClientReqItemList', { ClientReqID: tableRow.ClientReqID })
                    .success(function (response) {
                        $scope.VenCSItemList = response.ClientReqItemList;
                        $scope.VenCSItemGridDisplayCollection = [].concat($scope.VenCSItemList);
                        $scope.VenCSItemGridDisplayCollection.forEach(function (item, index) {
                            // Add an index field to each object
                            item.index = index; // Adding 1 to start index from 1
                        });
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });

                $http.post('/ClientRequisition/GetClientReqTermList', { ClientReqID: tableRow.ClientReqID })
                    .success(function (response) {
                        $scope.ReqTermDataSetupGridData = response.ClientReqTermList;
                        $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });

                $('#ClientInfoModal').modal('hide');
            };

            $scope.clearVendorCSInfo = function () {
                $scope.VendorCSInfo = {
                    VendorCSInfoID: "",
                    VendorID: "",
                    VendorCode: "",
                    VendorName: "",
                    ContactPerson: "",
                    ContactNumber: "",
                    VendorTINNo: "",
                    VendorBINNo: "",
                    VendorAddress: "",
                    RequisitionNo: "",
                    SubmissionDate: "",
                    RequisitionDate: "",
                    Remarks: ""
                }

                $scope.VendorCSInfoItem = {
                    VendorCSInfoItemID: "",
                    VendorCSInfoID: "",
                    Description: "",
                    DeliveryLocation: "",
                    DeliveryDate: "",
                    ServiceCategory: { ServiceCategoryID: "", ServiceCategoryName: "" },
                    ServiceItem: { ServiceItemID: "", ServiceItemName: "" },
                    DeliveryMode: "",
                    ReqQnty: "",
                    ReqUnit: ""
                }
                $scope.VendorCSInfoTerm = {
                    VendorCSInfoTermsID: "",
                    VendorCSInfoID: "",
                    TermsID: "",
                    TermsCode: "",
                    TermsName: ""
                }
                $scope.VendorCSVendorsItemWise = {
                    VendorCSInfoID: "",
                    VendorID: "",
                    VendorName: "",
                    TransactionName: "",
                    VendorCSInfoItemID: "",
                    ContactPerson: "",
                    ContactNumber: "",
                    VendorQutnID: "",
                    VendorQutnNo: "",
                    QuotationDate: "",
                    TolQnty: "",
                    VenReqUnit: "",
                    Status: ""
                }

                $("#DeliveryDate").val('');
                $scope.VenCSItemList = [];  // base collection
                $scope.VenCSItemGridDisplayCollection = [].concat($scope.VenCSItemList);

                $scope.ReqTermDataSetupGridData = [];  // base collection
                $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);

                $scope.ReqWiseVendorList = [];  // base collection
                $scope.VendorInfoDisplayedCollection = [].concat($scope.ReqWiseVendorList);
            }

            $scope.toggleReqItemEdit = function (tableRow, $i) {
                $('#RequisitionItemModal').modal('show');
                $scope.resetVendorCSInfoItem();

                $scope.VendorCSInfoItem.VendorCSInfoItemID = tableRow.VendorCSInfoItemID;

                $scope.VendorCSInfoItem.ServiceCategory.ServiceCategoryID = tableRow.ServiceCategoryID;
                $scope.VendorCSInfoItem.ServiceCategory.ServiceCategoryName = tableRow.ServiceCategoryName;
                $scope.VendorCSInfoItem.ServiceItem.ServiceItemID = tableRow.ServiceItemID;
                $scope.VendorCSInfoItem.ServiceItem.ServiceItemName = tableRow.ServiceItemName;

                $scope.VendorCSInfoItem.DeliveryMode = tableRow.DeliveryMode;
                $scope.VendorCSInfoItem.DeliveryLocation = tableRow.DeliveryLocation;
                $scope.VendorCSInfoItem.DeliveryDate = tableRow.DeliveryDate;
                $scope.VendorCSInfoItem.Description = tableRow.Description;

                $scope.VendorCSInfoItem.ReqQnty = tableRow.ReqQnty;
                $scope.VendorCSInfoItem.ReqUnit = tableRow.ReqUnit;

                $scope.VenCSItemGridDisplayCollection.splice($i, 1);
                $scope.vendorCSItemArray.splice($i, 1);

                $http.post("/ServiceItemInfo/GetServiceItemInfoSearchList?ServiceItemCategoryID=" + tableRow.ServiceCategoryID)
                    .success(function (response) {
                        $scope.loading = false;
                        $scope.serviceItems = response.ServiceItemInfoSearchList;
                    })
                    .error(function () { });

                $("#btnAddReqItem").html('Update');
            };

            $scope.toggleReqItemDelete = function (tableRow, $i) {
                if (!tableRow.VendorCSInfoItemID) {
                    $scope.resetVendorCSInfoItem();
                    $scope.VenCSItemGridDisplayCollection.splice($i, 1);
                    $scope.vendorCSItemArray.splice($i, 1);
                    toastr.success('Data Deleted Successsfully');
                }
                else {
                    $scope.resetVendorCSInfoItem();
                    $scope.VendorCSInfoItem.VendorCSInfoItemID = tableRow.VendorCSInfoItemID;
                    $('#deleteReqItemModal').modal('show');
                }
            };

            $scope.DeleteVendorCSInfoItem = function () {
                $http.post('/VendorCSInfo/DeleteVendorCSInfoItemAndTerm',
                    { VendorCSInfoItemID: $scope.VendorCSInfoItem.VendorCSInfoItemID, VendorCSInfoTermID: $scope.VendorCSInfoTerm.VendorCSInfoTermID })
                    .success(function (response) {
                        if (response.status == "S203") {
                            $scope.resetVendorCSInfoItem();
                            $scope.VenCSItemGridDisplayCollection.splice($i, 1);
                            $scope.vendorCSItemArray.splice($i, 1);
                            toastr.success('Data Deleted Successsfully');
                            return;
                        }
                    });
            }

            ////////////////////////Select for Update from Search grid ///////////////////////
            $scope.toggleVendorWiseItemReqDelete = function (tableRow, $i) {
                if (!tableRow.VendorCSInfoItemWiseID) {
                    $scope.resetVendorWiseItemReq();
                    $scope.VendorInfoDisplayedCollection.splice($i, 1);
                    //$scope.vendorCSItemArray.splice($i, 1);
                    toastr.success('Data Deleted Successsfully');
                }
                else {
                    $scope.resetVendorWiseItemReq();
                    $scope.VendorCSVendorsItemWise.VendorCSInfoItemWiseID = tableRow.VendorCSInfoItemWiseID;
                    $('#deleteReqItemModal').modal('show');
                }
            };

            $scope.toggleVendorSelect = function (row) {

                $scope.VendorCSInfo.VendorID = row.VendorID;
                $scope.VendorCSInfo.VendorCode = row.VendorCode;
                $scope.VendorCSInfo.VendorName = row.VendorName;

                $scope.VendorCSVendorsItemWise.VendorID = row.VendorID;
                $scope.VendorCSVendorsItemWise.VendorName = row.VendorName;
                $scope.VendorCSVendorsItemWise.TransactionName = row.TransactionName;
                $scope.VendorCSVendorsItemWise.ContactPerson = row.ContactPerson;
                $scope.VendorCSVendorsItemWise.ContactNumber = row.ContactNumber;
                $scope.VendorCSVendorsItemWise.Email = row.Email;
                $scope.VendorCSVendorsItemWise.Address = row.Address;

                $scope.VendorInfoDisplayedCollection = $scope.VendorInfoDisplayedCollection.concat($scope.VendorCSVendorsItemWise);

                $scope.resetVendorWiseItemReq();

                $('#VendorInfoModal').modal('hide');
            };

            ////////////////////////////////////

            $scope.selectedRowsForVendor = [];
            $scope.SelectedVendorForBiddingDisplayedCollection = [];
            $scope.showVendorforBiddingArea = false;

            $scope.selectEntity = function (row) {
                var selecteditems = {
                    VendorQutnID: row.VendorQutnID,
                    VendorID: row.VendorID,
                    VendorName: row.VendorName,
                    ContactPerson: row.ContactPerson,
                    ContactNumber: row.ContactNumber,
                    VendorQutnNo: row.VendorQutnNo,
                    QuotationDate: row.QuotationDate,
                    TolQnty: row.TolQnty,
                    index: row.index
                };
                var indexToRemove = -1;
                $scope.selectedRowsForVendor.forEach(function (item, index) {
                    if (item.index === selecteditems.index) {
                        indexToRemove = index;
                    }
                });
                if (indexToRemove !== -1) {
                    $scope.selectedRowsForVendor.splice(indexToRemove, 1);
                    $scope.SelectedVendorForBiddingDisplayedCollection.splice(indexToRemove, 1);
                    row.selected = false;
                }

                else {
                    $scope.selectedRowsForVendor.push(selecteditems);
                    $scope.SelectedVendorForBiddingDisplayedCollection = [].concat($scope.selectedRowsForVendor);
                    row.selected = true;
                    $scope.showVendorforBiddingArea = true;
                }
                row.buttonCheckedforVendor = row.selected;

                if ($scope.selectedRowsForVendor.length <= 0) {
                    $scope.showVendorforBiddingArea = false;
                }
            };

            $scope.resetVendorWiseItemReq = function () {
                $scope.VendorCSVendorsItemWise = {
                    VendorCSInfoID: "",
                    VendorID: "",
                    VendorName: "",
                    TransactionName: "",
                    VendorCSInfoItemID: "",
                    ContactPerson: "",
                    ContactNumber: "",
                    VendorTINNo: "",
                    VendorBINNo: "",
                    VendorEmail: "",
                    VendorAddress: "",
                    VenReqQnty: "",
                    VenReqUnit: "",
                    Status: ""
                }
            }

            ///////////////////////Save/Update Master///////////////////////

            //////////////////Search Grid List///////////////////////////////

            $scope.SearchVendorCSInfoModal = function () {
                $scope.GetVendorCSInfoSearchList();
                $('#SearchVendorCSInfoModal').modal('show');
            };

            $scope.GetVendorCSInfoSearchList = function () {
                $http.post("/VendorCSInfo/GetVendorCSInfoSearchList")
                    .success(function (response) {
                        $scope.vendorCSSearchList = response.vendorCSSearchList;
                        $scope.vendorCSDisplayedCollection = [].concat($scope.vendorCSSearchList);
                    })
                    .error(function () { });
            }

            ////////////////////////Select for Update from Search grid ///////////////////////

            $scope.toggleVendorCSInfoSelect = function (tableRow) {
                $scope.VendorCSInfo.VendorCSInfoID = tableRow.VendorCSInfoID;
                $scope.VendorCSInfo.ClientID = tableRow.ClientID;
                $scope.VendorCSInfo.ClientName = tableRow.ClientName;
                $scope.VendorCSInfo.VendorID = tableRow.VendorID;
                $scope.VendorCSInfo.VendorName = tableRow.VendorName;
                $scope.VendorCSInfo.RequisitionNo = tableRow.RequisitionNo;
                $scope.VendorCSInfo.RequisitionDate = tableRow.RequisitionDate;
                $scope.VendorCSInfo.SubmissionDate = tableRow.SubmissionDate;
                $scope.VendorCSInfo.LastDateofQuotation = tableRow.LastDateofQuotation;
                $scope.VendorCSInfo.Remarks = tableRow.Remarks;
                $scope.VendorCSInfo.Status = tableRow.Status;

                $http.post('/VendorCSInfo/GetVendorCSInfoItemList', { VendorCSInfoID: tableRow.VendorCSInfoID })
                    .success(function (response) {
                        $scope.VenCSItemList = response.VendorCSInfoItemList;
                        $scope.VenCSItemGridDisplayCollection = [].concat($scope.VenCSItemList);
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });

                $http.post('/VendorCSInfo/GetVendorCSInfoTermList', { VendorCSInfoID: tableRow.VendorCSInfoID })
                    .success(function (response) {
                        $scope.ReqTermDataSetupGridData = response.VendorCSInfoTermList;
                        $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });

                $http.post('/VendorCSInfo/GetReqWiseVendorList', { VendorCSInfoID: tableRow.VendorCSInfoID })
                    .success(function (response) {
                        $scope.ReqWiseVendorList = response.ReqWiseVendorList;
                        $scope.VendorInfoDisplayedCollection = [].concat($scope.ReqWiseVendorList);//VendorInfoDisplayedCollection
                        $scope.loading = false;
                    })
                    .error(function () { });


                $('#SearchVendorCSInfoModal').modal('hide');
            };

            ///////////////////////////////////////////////

            ////////////////////////Requsition Terms & Conditions ///////////////////////

            $scope.ShowTermsConditionsList = function () {
                $http.get("/VendorCSInfo/GetTermsConditionsList")
                    .success(function (response) {
                        $scope.TermsConditionsList = response.termsConditionsList;
                        $scope.TermsConditionsDisplayedCollection = [].concat($scope.TermsConditionsList);
                        $scope.loading = false;
                    })
                    .error(function () { });

                $('#VendorCSInfoTermsConditionsModal').modal('show');
            };

            $scope.toggleTermsConditionsSelect = function (row) {
                $scope.VendorCSInfo.TermsID = row.TermsID;
                $scope.VendorCSInfo.FormName = row.FormName;

                $http.post('/VendorCSInfo/GetVendorCSInfoTermAgainstFormList', { TermsID: row.TermsID })
                    .success(function (response) {
                        $scope.ReqTermDataSetupGridData = response.VendorCSInfoTermList;
                        $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                        $scope.loading = false;
                    }).error(function () {
                        $scope.loading = false;
                    });

                $('#VendorCSInfoTermsConditionsModal').modal('hide');
            };

            $scope.VendorCSInfoTerm = {
                VendorCSInfoTermsID: "",
                VendorCSInfoID: "",
                TermsID: "",
                TermsCode: "",
                TermsName: ""
            }

            $scope.AddReqTermModal = function () {

                if ($('#RequisitionNo').val() == "") {
                    toastr.error("Vendor ReqNo.  Required");
                    return;
                }

                if ($('#SubmissionDate').val() == "") {
                    toastr.error("Submission Date Required.");
                    return;
                }

                if ($('#RequisitionDate').val() == "") {
                    toastr.error("Requisition Date Date Required");
                    return;
                }
                $('#RequisitionTermModal').modal('show');
            };

            $scope.ReqTermDataSetupGridData = [];  // base collection
            $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);

            $scope.AddReqTerm = function () {

                if ($('#TermsCode').val() == "") {
                    toastr.error("Terms Code Required");
                    return;
                }

                if ($('#TermsName').val() == "") {
                    toastr.error("Terms Name Required.");
                    return;
                }

                $scope.VendorCSInfoTerm.TermsCode = $('#TermsCode').val();
                $scope.VendorCSInfoTerm.TermsName = $('#TermsName').val();

                $scope.vendorCSTermArray.push($scope.VendorCSInfoTerm);

                $scope.ReqTermGridDisplayCollection = $scope.ReqTermGridDisplayCollection.concat($scope.VendorCSInfoTerm);

                $scope.resetVendorCSInfoTerm();
                $("#btnAddReqTerm").html('Add');
                $('#RequisitionTermModal').modal('hide');
            }

            $scope.resetVendorCSInfoTerm = function () {
                $scope.VendorCSInfoTerm = {
                    VendorCSInfoTermsID: "",
                    VendorCSInfoID: "",
                    TermsID: "",
                    TermsCode: "",
                    TermsName: ""
                }
            }

            $scope.toggleReqTermEdit = function (tableRow, $i) {
                $('#RequisitionTermModal').modal('show');
                $scope.resetVendorCSInfoTerm();
                $scope.VendorCSInfoTerm.VendorCSInfoTermID = tableRow.VendorCSInfoTermD;
                $scope.VendorCSInfoTerm.VendorCSInfoID = tableRow.VendorCSInfoID;
                $scope.VendorCSInfoTerm.TermsID = tableRow.TermsID;
                $scope.VendorCSInfoTerm.TermsCode = tableRow.TermsCode;
                $scope.VendorCSInfoTerm.TermsName = tableRow.TermsName;
                $scope.ReqTermGridDisplayCollection.splice($i, 1);
                $scope.vendorCSTermArray.splice($i, 1);
                $("#btnAddReqTerm").html('Update');
            };

            $scope.toggleReqTermDelete = function (tableRow, $i) {
                if (!tableRow.VendorCSInfoTermID) {
                    $scope.resetVendorCSInfoTerm();
                    $scope.ReqTermGridDisplayCollection.splice($i, 1);
                    $scope.vendorCSTermArray.splice($i, 1);
                    toastr.success('Data Deleted Successsfully');
                }
                else {
                    $scope.resetVendorCSInfoTerm();
                    $scope.VendorCSInfoTerm.VendorCSInfoTermID = tableRow.VendorCSInfoTermID;
                    $('#deleteReqTermModal').modal('show');
                }
            };

            $scope.DeleteVendorCSInfoTerm = function () {
                $http.post('/VendorCSInfo/DeleteVendorCSInfoItemAndTerm',
                    { VendorCSInfoItemID: $scope.VendorCSInfoItem.VendorCSInfoItemID, VendorCSInfoTermID: $scope.VendorCSInfoTerm.VendorCSInfoTermID })
                    .success(function (response) {
                        if (response.status == "S203") {
                            $scope.resetVendorCSInfoTerm();
                            $scope.ReqTermGridDisplayCollection.splice($i, 1);
                            $scope.vendorCSTermArray.splice($i, 1);
                            toastr.success('Data Deleted Successsfully');
                            return;
                        }
                    });
            }

            ///////////////////////////////////////////////

            $scope.Post = function () {

                //if ($('#RequisitionNo').val() == "") {
                //    toastr.error("Vendor ReqNo.  Required");
                //    return;
                //}

                //if ($('#SubmissionDate').val() == "") {
                //    toastr.error("Submission Date Required.");
                //    return;
                //}

                if ($('#CSRecDate').val() == "") {
                    toastr.error("CSRecDate Date Required");
                    return;
                }

            $scope.VendorCSInfo.CSRecDate = $('#CSRecDate').val();
            $http.post('/VendorCSInfo/SaveVendorCSInfo',
                {
                    vendorCS: $scope.VendorCSInfo,
                    vendorCSItem: $scope.selectedVendors,
                    vendorCSTerm: $scope.ReqTermGridDisplayCollection,

                })
                .success(function (response) {
                    if (response.status == "S201") {
                        toastr.success("Data Saved Successfully.");
                        $scope.clearVendorCSInfo();
                        $scope.toggleRefreshTable();
                        $scope.loading = false;
                        return;
                    }
                    else if (response.status == "S202") {
                        toastr.success("Data Updated Successfully.");
                        $scope.clearVendorCSInfo();
                        $scope.loading = false;
                        return;
                    }
                    else if (response.status == "S203") {
                        toastr.success("Data Deleted Successfully.");
                        $scope.clearVendorCSInfo();
                        $scope.loading = false;
                        return;
                    }
                    else {
                        toastr.error("Data Save Failed.");
                        $scope.loading = false;
                        return;
                    }
                })
                .error(function () {
                    toastr.error("Data Save Failed.");
                    $scope.loading = false;
                    return;
                });
        }

            $scope.toggleRefreshTable = function () {

                $timeout(function () {
                    // Reload the current page
                    window.location.reload();
                }, 2000);

            };

            $scope.getRowStyle = function (row) {
                if (row.selected) {
                    return { background: '#b9e7d8' }; // Change this to your desired color
                } else {
                    return {}; // No additional styling
                }
            };
        }])
    </script>

