@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}

<style type="text/css">
    body {
        font-size: 12px; /* Set global font size */
    }

    .box-body, .form-group, .btn, .form-control, .box-header {
        font-size: 12px;
    }

    .btn {
        font-size: 12px;
        padding: 4px 8px;
    }

    h3.box-title {
        font-size: 14px;
    }

    input.form-control, button.form-control {
        font-size: 12px;
    }

    label {
        font-size: 12px;
    }

    /* Adjust icon size */
    .fa {
        font-size: 12px;
        /* padding-right: 3px;*/
    }

    .text-success {
        color: green;
        font-size: 14px;
    }

    .text-primary {
        color: blue;
        font-size: 14px;
    }

</style>

<div class="box box-primary box-body" ng-controller="ClientRequisitionCtrl">

    <div class="box-header with-border bg-light-blue-gradient" style="height:38px;">
        <h2 class="box-title" style="font-family: math; font-weight: 500;">Requisition From Client</h2>

        <div class="box-tools pull-right">
            <div class="col-lg-12 pull-right">
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="toggleRefreshTablemain()" class="button-custom" ng-disabled="btnRefresh">
                        <i class="fa fa-refresh" style="padding-right: 5px"></i> Refresh
                    </button>
                </div>
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="SearchClientReqModal()" class="button-custom" ng-disabled="btnSearch">
                        <i class="fa fa-search" style="padding-right: 5px"></i> Search
                    </button>
                </div>
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="Post()" class="button-custom" ng-disabled="btnSave">
                        <i class="fa fa-save" style="padding-right: 5px"></i> {{ ClientReq.ClientReqID ? 'Update' : 'Save' }}
                    </button>
                </div>
                <div class="btn-group pull-right" style="margin-left: 4px; margin-right: 4px;">
                    <button type="button" data-ng-click="Cancel()" class="button-custom" ng-disabled="btnSave">
                        <i class="fa fa-times" style="padding-right: 5px"></i> Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>


    <div class="box-body " style="margin: 1%; padding: 5px 5px 5px 5px;" data-ng-disabled="">
        <div class="row">
            <div class="row">
                <div class="col-lg-3 ">
                    <div class="form-group">
                        <label for="ClientName">Client Name :</label>
                    </div>
                </div>

                <div class="col-sm-4 col-md-4 col-lg-4">
                    <div style="position: relative;">
                        <input id="ClientName" name="ClientName" type="text" data-ng-model="ClientReq.ClientName"
                               class="form-control" ng-readonly="true"
                               placeholder="Client Name"
                               style="height: 25px; font-size: smaller;" />

                        <button type="button" data-ng-click="ShowClientList()"
                                style="position: absolute; right: 1px; top: 50%; transform: translateY(-50%);
       padding: 0px 10px; border: 2px solid black; background: transparent;">
                            <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Client Requisition No.</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <input ng-readonly="viewonlymode == true" id="ClientReqNo" name="ClientReqNo" type="text" class="form-control" placeholder="Client Requisition No" ng-model="ClientReq.ClientReqNo" />
                    </div>
                </div>

                <div class="col-lg-2">
                    <div class="form-group">
                        <label>Requisition ID:</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <input id="ClientReqID" name="ClientReqID" readonly type="text" class="form-control"  placeholder="Auto Requisition ID" ng-model="ClientReq.ClientReqID" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 ">
                    <div class="form-group">
                        <label for="SubmissionDate">Submission Date:</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <input ng-readonly="viewonlymode == true" id="SubmissionDate" name="SubmissionDate" type="text" autocomplete="off" class="DatePicker form-control" placeholder="DD/MM/YYYY" ng-model="ClientReq.SubmissionDate" />
                    </div>
                </div>
                <div class="col-lg-2 ">
                    <div class="form-group">
                        <label for="RequisitionDate">Requisition Date:</label>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group">
                        <input ng-readonly="viewonlymode == true" id="RequisitionDate" name="RequisitionDate" type="text" autocomplete="off" class="DatePicker form-control" placeholder="DD/MM/YYYY" ng-model="ClientReq.RequisitionDate" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3 ">
                    <div class="form-group">
                        <label for="Remarks">Remarks :</label>
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="form-group">
                        <input ng-readonly="viewonlymode == true" id="Remarks" name="Remarks" type="text" data-ng-model="ClientReq.Remarks" class="form-control" placeholder="Remarks" />
                    </div>
                </div>
            </div>

            <div class="row">
                @* implementing pdf here*@

                <div class="col-lg-3">
                    <div class="form-group">
                        <label for="upload_documents">
                            Upload Documents <br>
                            (<span style="color:#ff4900;"> PDF Only, Max Size 2MB </span>)
                        </label>
                    </div>
                </div>
                <div ng-show="clientReqDisplayedCollection.length <= 0" class="col-lg-3">
                    <div class="form-group">
                        <input type="file" style="height: 25px; float: left; margin-top: 5px;" id="FileUpload1" accept=".pdf"
                               ng-model="uploadedFile" onchange="angular.element(this).scope().fileSelected(this)" />
                    </div>
                </div>
                <div ng-show="clientReqDisplayedCollection.length > 0" class="col-lg-1">
                    <button ng-click="ViewDocument()" class="btn button-custom"><i class="fa fa-eye"></i> View</button>

                </div>

                @* ends implementing pdf here*@

            </div>
        </div>
    </div>

    <div id="ClientInfoModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- Modal Header -->
                <div style="text-align: right;">
                    <button type="button" class="btn-danger" data-dismiss="modal" ng-click="ResetSearchModel()"
                            aria-hidden="true" style="color: #ffffff;">
                        <i class="fa fa-remove"></i>
                    </button>
                </div>

                <div class="modal-body table-responsive">
                    <table st-table="ClientDisplayedCollection" st-safe-src="ClientList" class="table table-condensed table-bordered table-striped table-hover pnlView">
                        <thead>
                            <tr style="font-size: 15px;">
                                <th colspan="12" style="text-align: left; color: black; font-weight: 100; font-family: math; background: #ffffff; border: 1px solid #3003eb">
                                    Client Information
                                </th>
                            </tr>

                            <tr style="background-color: #82b0c9; color: #010823; font-size: 11px;">

                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('ClientCode')">Client Code</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('ClientName')">Client Name</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('ClientCategoryName')">Client Category</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('ContactPerson')">Contact Person</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('ContactNumber')">Contact Number</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('Address')">Address</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('Status')">Status</th>
                                <th class="col-lg-1 col-md-1 col-sm-1">Action</th>
                            </tr>
                            <tr>
                                <th><input st-search="ClientCode" placeholder="Client Code" class="input-sm form-control" type="search" /></th>
                                <th><input st-search="ClientName" placeholder="ClientName" class="input-sm form-control" type="search" /></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="row in ClientDisplayedCollection">
                                <td class="hidden">{{row.ClientID}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.ClientCode}}</td>
                                <td class="col-lg-3 col-md-3 col-sm-3 text-center">{{row.ClientName}}</td>
                                <td class="hidden">{{row.ClientCategoryID}}</td>
                                <td class="col-lg-3 col-md-3 col-sm-3 text-center">{{row.ClientCategoryName}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.ContactPerson}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.ContactNumber}}</td>
                                <td class="hidden">{{row.ClientAddressID}}</td>
                                <td class="col-lg-3 col-md-3 col-sm-3 text-center">{{row.Address}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">
                                    <span ng-attr-class="{{row.Status =='1'? 'label label-success' : 'label label-danger' }}">
                                        {{row.Status == '1'? 'Active':'InActive'}}
                                    </span>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-primary btn-flat btnEdit" data-ng-click="toggleClientSelect(row)"><i class="fa fa-edit"></i> Select</button>
                                </td>
                            </tr>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="7" class="text-center">
                                    <div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                
            </div>
        </div>
    </div>

    <div id="SearchClientReqModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- Modal Header -->
                <div style="text-align: right;">
                    <button type="button" class="btn-danger" data-dismiss="modal" ng-click="ResetSearchModel()"
                            aria-hidden="true" style="color: #ffffff;">
                        <i class="fa fa-remove"></i>
                    </button>
                </div>

                <div class="table-responsive" data-ng-disabled="" ng-cloak>
                    <table st-table="clientReqDisplayedCollection" st-safe-src="clientReqSearchList" class="table table-condensed table-bordered table-striped table-hover pnlView">
                        <thead>
                            <tr style="font-size: 15px;">
                                <th colspan="12" style="text-align: left; color: black; font-weight: 100; font-family: math; background: #ffffff; border: 1px solid #3003eb">
                                    Client Information
                                </th>
                            </tr>

                            <tr style="background-color: #82b0c9; color: #010823; font-size: 11px;">
                                <th class="col-lg-3 col-md-3 col-sm-3" data-ng-click="sort('ClientName')">Client Name</th>
                                <th class="col-lg-3 col-md-3 col-sm-3" data-ng-click="sort('ClientReqNo')">Requisition No</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('RequisitionDate')">Requisition Date</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('SubmissionDate')">Submission Date</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('Status')">Status</th>
                                <th class="col-lg-1 col-md-1 col-sm-1">Action</th>
                            </tr>
                            <tr>
                                <th><input st-search="ClientCode" placeholder="Client Name" class="input-sm form-control" type="search" /></th>
                                <th><input st-search="ClientName" placeholder="ClientName" class="input-sm form-control" type="search" /></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="row in clientReqDisplayedCollection">
                                <td class="hidden">{{row.ClientReqID}}</td>
                                @*<td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.ClientCode}}</td>*@
                                <td class="hidden">{{row.ClientID}}</td>
                                <td class="col-lg-3 col-md-3 col-sm-3 text-left">{{row.ClientName}}</td>
                                <td class="col-lg-3 col-md-3 col-sm-3 text-left">{{row.ClientReqNo}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.RequisitionDate}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.SubmissionDate}}</td>
                                <td class="hidden">{{row.Remarks}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">
                                    <span ng-attr-class="{{row.Status =='1'? 'label label-success' : 'label label-danger' }}">
                                        {{row.Status == '1'? 'Active':'InActive'}}
                                    </span>
                                </td>

                                <td>
                                    <a class="btn col-center btn-sm btn-flat btn-success" ng-href="#" ng-rel="" data-ng-click="toggleClientReqSelect(row)">Select</a>
                                </td>
                            </tr>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="9" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="100"></div></td>
                            </tr>
                        </tfoot>

                    </table>
                </div>

            </div>
        </div>
    </div>

    @*    <div class="row">
            <div class="col-md-12">
                <div class="box box-info" style="border-bottom: 1px solid #d3e3e3; ">
                    <div class="box-header with-border" style="height: 40px; border-bottom: 1px solid #d3e3e3;">
                        <h2 class="box-title" style="font-family: Verdana; font-size: 16px; font-weight: bold; color: #166e19;">Requisition Item List</h2>

                        <div class="box-tools pull-right">
                            <div class="col-lg-12 pull-right">
                                <div class="btn-group pull-right" style="margin:2px;">
                                    <button type="button" id="btnAddReqItem" ng-disabled="btnAddReqItem" data-ng-click="AddReqItemModal()" class="button-detail btn"><i class="fa fa-plus" style="padding-right: 3px"></i>Add</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@

    <div class="row" style="margin: 1%; background-color: #f0f0f0; box-shadow: 2px 2px 5px #888888; padding: 5px 10px 5px 10px;">
        <div class="row">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">
                <table st-table="GridDisplayCollection" st-safe-src="masterDataSetupGridData" class="table table-condensed table-bordered table-striped table-hover pnlView">
                    <thead>
                        <tr style="font-size: 15px;">
                            <th colspan="10" style="text-align: left; color: black; font-weight: 100; font-family: math; background: #ffffff; border: 1px solid #3003eb">
                                Requisition Item List
                            </th>

                            <th ng-hide="viewonlymode == true" style="background: #ffffff;">
                                <button type="button" id="btnAddReqItem" ng-disabled="btnAddReqItem" ng-click="AddReqItemModal()" class="button-detail btn">
                                    <i class="fa fa-plus" style="padding-right: 3px"></i> Add
                                </button>
                            </th>
                        </tr>
                        <tr style="background-color: #82b0c9; color: #010823; font-size: 11px;">

                            <th style="text-align: left;" st-sort="">Item Code</th>
                            <th style="text-align: left;" st-sort="">Item Name</th>
                            <th style="text-align: left;" st-sort="">Service Category</th>
                            <th style="text-align: left;" st-sort="">Description</th>
                            <th style="text-align: left;" st-sort="">Delivery Location</th>
                            <th style="text-align: left;" st-sort="">Delivery Date</th>
                            <th style="text-align: left;" st-sort="">Delivery Mode</th>
                            <th style="text-align: left;" st-sort="">ReqType</th>
                            <th style="text-align: left;" st-sort="">ReqQnty</th>
                            <th style="text-align: left;" st-sort="">ReqUnit</th>
                            <th ng-hide="viewonlymode == true" style="text-align: left;">Action</th>
                        </tr>
                        @*<tr>
                                <th colspan="5"><input st-search="" placeholder="Search" class="input-sm form-control" type="search" /></th>
                            </tr>*@
                    </thead>
                    <tbody>
                        <tr ng-repeat="row in GridDisplayCollection" ng-cloak style="font-size:12px;">
                            <td class="hidden">{{row.ClientReqItemID}}</td>
                            <td class="hidden">{{row.ClientReqID}}</td>
                            <td class="col-lg-1" style="width:5%;">{{ row.ServiceItemID }} </td>
                            <td class="col-lg-1" style="width:5%;">{{row.ServiceItemName}}</td>
                            <td class="col-lg-1" style="width:6%;">{{row.ServiceCategoryName}}</td>
                            <td class="col-lg-1" style="width:6%;">{{row.Description}}</td>
                            <td class="col-lg-1" style="width:6%;">{{row.DeliveryLocation}}</td>
                            <td class="col-lg-1" style="width:6%;">{{row.DeliveryDate}}</td>
                            <td class="col-lg-1" style="width:6%;">{{row.DeliveryMode}}</td>
                            <td class="col-lg-1" style="width:6%;">{{row.ReqType}}</td>
                            <td class="col-lg-1" style="width:6%;">{{row.ReqQnty | number:2}}</td>
                            <td class="col-lg-1" style="width:5%;">{{row.ReqUnit}}</td>

                            <td ng-hide="viewonlymode == true" class="col-lg-1" style="width:5%;">
                                <button type="button" ng-if="row.ClientReqItemID" class="btn btn-xs btn-primary btn-flat btnEdit" data-ng-click="toggleReqItemEdit(row,$index)"><i class="fa fa-edit"></i> </button>
                                <button type="button" ng-if="!row.ClientReqItemID" class="btn btn-xs btn-primary btn-flat btnEdit" data-ng-click="toggleReqItemEdit(row,$index)"><i class="fa fa-edit"></i> </button>
                                <button type="button" class="btn btn-xs btn-primary btn-flat btnDelete" data-ng-click="toggleReqItemDelete(row,$index)"><i class="fa fa-remove"></i> </button>
                            </td>
                        </tr>
                    </tbody>
                    <tfoot>
                        @*<tr>
                                <td colspan="11" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div></td>
                            </tr>*@
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div id="RequisitionItemModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="row">
                        <div class="col-sm-5 col-md-5 col-lg-5">
                            <h4 class="modal-title" style="font-family: initial; font-weight: 700">Requisition Item Information</h4>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6">

                        </div>
                        <div style="text-align: right;">
                            <button type="button" class="btn-danger" data-dismiss="modal" ng-click="ResetSearchModel()"
                                    aria-hidden="true" style="color: #ffffff;">
                                <i class="fa fa-remove"></i>
                            </button>
                        </div>
                    </div>
                </div>


                <div ng-cloak>
                    <div class="row">
                        <div class="col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="ServiceCategory">Service Category:</label>
                            </div>
                        </div>
                        <div class=" col-lg-3">
                            <div class="form-group">
                                <select id="ServiceCategory" name="ServiceCategory" class="form-control" ng-model="ClientReqItem.ServiceCategory" ng-change="ServiceCategoryChange()"
                                        ng-options="serviceCategory as serviceCategory.ServiceCategoryName for serviceCategory in serviceCategorys track by serviceCategory.ServiceCategoryID" required="required">
                                    <option value="" style="display: none">-- Select--</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="ServiceItem">Item Name :</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <select id="ServiceItem" name="ServiceItem" class="form-control" ng-model="ClientReqItem.ServiceItem"
                                        ng-options="serviceItem as serviceItem.ServiceItemName for serviceItem in serviceItems track by serviceItem.ServiceItemID" required="required">
                                    <option value="" style="display: none">-- Select--</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="Description">Description:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="Description" type="text" name="Description" ng-model="ClientReqItem.Description" class="form-control" autofocus />

                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="Delivery Location">Delivery Location:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="DeliveryLocation" type="text" name="DeliveryLocation" ng-model="ClientReqItem.DeliveryLocation" class="form-control" autofocus />

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="DeliveryDate">Delivery Date :</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="DeliveryDate" name="DeliveryDate" readonly type="text" class="DatePicker form-control" placeholder="DD/MM/YYYY"
                                       ng-model="ClientReqItem.DeliveryDate" style=" background-color:#ffffff; " />

                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="DeliveryMode">Delivery Mode :</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <select data-ng-model="ClientReqItem.DeliveryMode" class="form-control">
                                <option value="">-- None --</option>
                                <option value="Hardcopy">Hardcopy</option>
                                <option value="Softcopy">Softcopy</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        @*<div class="col-lg-1">
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label for="DeliveryDate">Delivery Date :</label>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <input id="DeliveryDate" name="DeliveryDate" readonly type="text" class="DatePicker form-control" placeholder="DD/MM/YYYY"
                                           ng-model="ClientReqItem.DeliveryDate" style=" background-color:#ffffff; " />
                                </div>
                            </div>*@
                        <div class="col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="DeliveryMode">Req. Type:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <select id="ReqType" ng-model="ClientReqItem.ReqType" class="form-control">
                                <option value="QV">Quotation from Vendor</option>
                                <option value="QC">Quotation to Client</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="ReqQnty">ReqQnty :</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="ReqQnty" type="text" name="ReqQnty" ng-model="ClientReqItem.ReqQnty" class="form-control" placeholder="0.000" min="0.001" autofocus />
                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="ReqUnit">ReqUnit :</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <select data-ng-model="ClientReqItem.ReqUnit" class="form-control">
                                <option value="">-- None --</option>
                                <option value="Hour">Hour</option>
                                <option value="Minute">Minute</option>
                                <option value="Second">Second</option>
                                <option value="Piece">Piece</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-group">
                            <div class="btn-group pull-right" style="margin:2px;">
                                <button type="button"
                                        id="btnAddReqItem"
                                        data-ng-click="AddReqItem()"
                                        class="button-detail btn"
                                        ng-disabled="isDuplicateCombination">
                                    <i class="fa fa-save" style="padding-right: 3px"></i>Add to Item List
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* <div id="ClientReqTermsConditionsModal" class="modal fade">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" ng-click="ResetModel()" aria-hidden="true">x</button>
                        <h3 class="modal-title">Terms & Conditions Information</h3>
                    </div>
                    <div class="modal-body table-responsive">
                        <table st-table="TermsConditionsDisplayedCollection" st-safe-src="TermsConditionsList" class="table table-condensed table-bordered table-striped table-hover pnlView">
                            <thead>
                                <tr>
                                    <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('FormCode')">Form Code</th>
                                    <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('FormName')">Form Name</th>
                                    <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('Status')">Status</th>
                                    <th class="col-lg-1 col-md-1 col-sm-1">Action</th>
                                </tr>
                                <tr>
                                    <th><input st-search="FormCode" placeholder="Form Code" class="input-sm form-control" type="search" /></th>
                                    <th><input st-search="FormName" placeholder="Form Name" class="input-sm form-control" type="search" /></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="row in TermsConditionsDisplayedCollection">
                                    <td class="hidden">{{row.TermsID}}</td>
                                    <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.FormCode}}</td>
                                    <td class="col-lg-3 col-md-3 col-sm-3 text-center">{{row.FormName}}</td>
                                    <td class="col-lg-1 col-md-1 col-sm-1 text-center">
                                        <span ng-attr-class="{{row.Status =='1'? 'label label-success' : 'label label-danger' }}">
                                            {{row.Status == '1'? 'Active':'InActive'}}
                                        </span>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-primary btn-flat btnEdit" data-ng-click="toggleTermsConditionsSelect(row)"><i class="fa fa-edit"></i> Select</button>
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="7" class="text-center">
                                        <div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <div class="col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                <button type="button" class="btn btn-default" data-dismiss="modal" ng-click="ResetModel()">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@

    <div id="ClientReqTermsConditionsModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div style="text-align: right;">
                    <button type="button" class="btn-danger" data-dismiss="modal" ng-click="ResetSearchModel()"
                            aria-hidden="true" style="color: #ffffff;">
                        <i class="fa fa-remove"></i>
                    </button>
                </div>
                <div class="modal-body table-responsive">
                    <table st-table="TermsConditionsDisplayedCollection" st-safe-src="TermsConditionsList" class="table table-condensed table-bordered table-striped table-hover pnlView">


                        <thead>
                            <tr style="font-size: 15px;">
                                <th colspan="12" style="text-align: left; color: black; font-weight: 100; font-family: math; background: #ffffff; border: 1px solid #3003eb">
                                    Terms & Conditions Information
                                </th>
                            </tr>
                            <tr style="background-color: #82b0c9; color: #010823; font-size: 11px;">
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('FormCode')">Form Code</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('FormName')">Form Name</th>
                                <th class="col-lg-1 col-md-1 col-sm-1" data-ng-click="sort('Status')">Status</th>
                                <th class="col-lg-1 col-md-1 col-sm-1">Action</th>
                            </tr>
                            <tr>
                                <th><input st-search="FormCode" placeholder="Form Code" class="input-sm form-control" type="search" /></th>
                                <th><input st-search="FormName" placeholder="Form Name" class="input-sm form-control" type="search" /></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="row in TermsConditionsDisplayedCollection">
                                <td class="hidden">{{row.TermsID}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">{{row.FormCode}}</td>
                                <td class="col-lg-3 col-md-3 col-sm-3 text-center">{{row.FormName}}</td>
                                <td class="col-lg-1 col-md-1 col-sm-1 text-center">
                                    <span ng-attr-class="{{row.Status =='1'? 'label label-success' : 'label label-danger' }}">
                                        {{row.Status == '1'? 'Active':'InActive'}}
                                    </span>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-primary btn-flat btnEdit" data-ng-click="toggleTermsConditionsSelect(row)"><i class="fa fa-edit"></i> Select</button>
                                </td>
                            </tr>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="7" class="text-center">
                                    <div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                @*<div class="modal-footer">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-group">
                            <button type="button" class="btn btn-default" data-dismiss="modal" ng-click="ResetModel()">Close</button>
                        </div>
                    </div>
                </div>*@
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteReqItemModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="position: fixed; top: 38%; left: 50%; transform: translate(-38%, -50%); background: rgba(0,0,0,0) !important">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="border-radius: 5px; width: 456px; height: 185px;">
                <div class="modal-header" style="height: 46px;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Delete Selected Item</h4>
                </div>
                <div class="modal-body" style="height: 80px;">
                    Are you sure to delete this item?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn button-custom" data-dismiss="modal" style="color: white; background-color: red;" ng-click="DeleteClientReqItem()">Yes</button>
                    <button type="button" class="btn button-custom" data-dismiss="modal" style="color: white">No</button>
                </div>
            </div>
        </div>
    </div>


    <div class="row">

        <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">
            <div class="row" style="padding: 11px; margin-right: 15px; margin-left: 15px;">
                <table st-table="ReqTermGridDisplayCollection" st-safe-src="ReqTermDataSetupGridData" class="table table-condensed table-bordered table-striped table-hover pnlView">
                    <thead>
                        <tr style="font-size: 15px; border: 1px solid #3003eb; background: #ffffff; ">
                            <th @*colspan="12"*@ style="text-align: left; color: black; font-weight: 100; font-family: math; background: #ffffff;">
                                <span>Terms & Conditions List</span>
                            </th>

                            <th ng-hide="viewonlymode == true" style="background: #ffffff; position: relative; padding: 5px;">
                                <div style="position: relative; display: inline-block; width: 200px;">
                                    <input id="FormName" name="FormName" type="text"
                                           data-ng-model="ClientReq.FormName" class="form-control" ng-readonly="true"
                                           style="width: 100%; height: 25px; font-size: smaller; padding-right: 35px;" />

                                    <button type="button" ng-click="ShowTermsConditionsList()"
                                            style="position: absolute; right: 1px; top: 50%; transform: translateY(-50%);
padding: 0px 10px; border: 2px solid black; background: transparent;">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>
                            </th>

                            <th ng-hide="viewonlymode == true" style="background: #ffffff;">
                                <button type="button" id="btnReqTermAdd" ng-disabled="btnReqTermAdd" ng-click="AddReqTermModal()" class="button-detail btn">
                                    <i class="fa fa-plus" style="padding-right: 3px"></i> Add
                                </button>
                            </th>

                        </tr>

                        <tr style="background-color: #82b0c9; color: #010823; font-size: 11px;">

                            <th style="text-align: left;" st-sort="">Terms Code</th>
                            <th colspan="13" style="text-align: left;" st-sort="">Terms & Conditions</th>
                            <th ng-hide="viewonlymode == true" style="text-align: left;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="row in ReqTermGridDisplayCollection" ng-cloak style="font-size:12px;">
                            <td class="hidden">{{row.ClientReqTermsID}}</td>
                            <td class="hidden">{{row.ClientReqID}}</td>
                            <td class="hidden">{{row.TermsID}}</td>
                            <td class="col-lg-1" style="width:5%;">{{row.TermsCode}}</td>
                            <td colspan="13" class="col-lg-1" style="width:6%;">{{row.TermsName}}</td>

                            <td ng-hide="viewonlymode == true" class="col-lg-1" style="width:5%;">
                                <button type="button" ng-if="row.ClientReqTermsID" class="btn btn-xs btn-primary btn-flat btnEdit" ng-click="toggleReqTermEdit(row,$index)"><i class="fa fa-edit"></i> </button>
                                <button type="button" ng-if="!row.ClientReqTermsID" class="btn btn-xs btn-primary btn-flat btnEdit" ng-click="toggleReqTermEdit(row,$index)"><i class="fa fa-edit"></i> </button>
                                <button type="button" class="btn btn-xs btn-primary btn-flat btnDelete" ng-click="toggleReqTermDelete(row,$index)"><i class="fa fa-remove"></i> </button>
                            </td>
                        </tr>
                    </tbody>
                    <tfoot>
                        @*<tr>
                                <td colspan="11" class="text-center"><div st-pagination="" st-items-by-page="itemsByPage" st-displayed-pages="10"></div></td>
                            </tr>*@
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div id="RequisitionTermModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="row">
                        <div class="col-sm-5 col-md-5 col-lg-5">
                            <h4 class="modal-title" style="font-family: initial; font-weight: 700">Terms & Conditions Information</h4>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-6">

                        </div>
                        <div style="text-align: right;">
                            <button type="button" class="btn-danger" data-dismiss="modal" ng-click="ResetSearchModel()"
                                    aria-hidden="true" style="color: #ffffff;">
                                <i class="fa fa-remove"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div ng-cloak>
                    <div class="row" style="position:relative;top:5px;">
                        <div class="col-lg-1">
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="TermsCode">Terms & Conditions Code:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="TermsCode" type="text" name="TermsCode" ng-model="ClientReqTerm.TermsCode" class="form-control" autofocus />

                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <label for="TermsName">Terms & Conditions:</label>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <input id="TermsName" type="text" name="TermsName" ng-model="ClientReqTerm.TermsName" class="form-control" autofocus />

                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-group">
                            <div class="btn-group pull-right" style="margin:2px;">
                                <button type="button" id="btnAddReqTerm" data-ng-click="AddReqTerm()" class="button-detail btn"><i class="fa fa-save" style="padding-right: 3px"></i>Add</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteReqTermModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="position: fixed; top: 38%; left: 50%; transform: translate(-38%, -50%); background: rgba(0,0,0,0) !important">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="border-radius: 5px; width: 456px; height: 185px;">
                <div class="modal-header" style="height: 46px;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Delete Selected Item</h4>
                </div>
                <div class="modal-body" style="height: 80px;">
                    Are you sure to delete this item?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn button-custom" data-dismiss="modal" style="color: white; background-color: red;" ng-click="DeleteReqTerm()">Yes</button>
                    <button type="button" class="btn button-custom" data-dismiss="modal" style="color: white">No</button>
                </div>
            </div>
        </div>
    </div>

    @*view pdf modal*@
    <div id="ShowPDFModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-fullscreen modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body" style="padding: 0; margin: 0;">
                    <iframe id="pdfViewer"
                            style="width: 100%; height: 100vh; border: none;"
                            title="PDF Viewer">
                    </iframe>
                </div>
            </div>
        </div>
    </div>




</div>

<script type="text/javascript">

    app.controller('ClientRequisitionCtrl', ['$scope', '$http', '$timeout', function ($scope, $http, $timeout) {

        $scope.clientReqItemArray = [];
        $scope.clientReqTermArray = [];
        $scope.itemsByPage = 10;

        $http.get('/ClientRequisition/GetServicesCategory')
            .success(function (response) {
                $scope.loading = false;
                $scope.serviceCategorys = response.result;
            }).error(function () { });

        $scope.ClientReq = {
            ClientReqID: "",
            ClientID: "",
            ClientName: "",

            TermsID: "",
            FormName: "",

            //ContactPerson: "",
            //ContactNumber: "",
            //ClientTINNo: "",
            //ClientBINNo: "",
            //ClientAddress: "",

            ClientReqNo: "",
            SubmissionDate: "",
            RequisitionDate: "",
            Remarks: "",
            Status: ""
        }

        $scope.ClientReqItem = {
            ClientReqItemID: "",
            Description: "",
            DeliveryLocation: "",
            DeliveryDate: "",
            ServiceCategory: { ServiceCategoryID: "", ServiceCategoryName: "" },
            ServiceItem: { ServiceItemID: "", ServiceItemName: "" },
            DeliveryMode: "",
            ReqType: "",
            ReqQnty: "",
            ReqUnit: ""
        }

        $('.DatePicker').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true
            // Set minDate to 0 to disable selecting previous dates
        });

        $('.DatePicker')
            .on('changeDate', function (ev) {
                $('.datepicker').hide();
            });

        $('#DeliveryDate').datepicker({
            format: "dd/mm/yyyy",
            autoclose: false,
            minDate: new Date() // Set minDate to the current date to disable selecting previous dates
        }).on('changeDate', function (ev) {
            var EnteredDate = $('#DeliveryDate').val();
            var today = new Date();
            today.setHours(0, 0, 0, 0);

            var date = EnteredDate.substring(0, 2);
            var month = EnteredDate.substring(3, 5);
            var year = EnteredDate.substring(6, 10);
            var myDate = new Date(year, month - 1, date);
            myDate.setHours(0, 0, 0, 0);

            //if (myDate < today) {
            //    $('#DeliveryDate').val('');
            //    toastr.error("Purchase date should not be less than system date.");
            //}

            $('.datepicker').hide();
        });

        // ################# Detail Add Modal ####################
        $scope.AddReqItemModal = function () {
            if ($('#ClientName').val() == "") {
                toastr.error("Client Name Required");
                return;
            }

            if ($('#ClientReqNo').val() == "") {
                toastr.error("Client ReqNo.  Required");
                return;
            }


            if ($('#SubmissionDate').val() == "") {
                toastr.error("Submission Date Required.");
                return;
            }

            if ($('#RequisitionDate').val() == "") {
                toastr.error("Requisition Date Date Required");
                return;
            }
            $('#RequisitionItemModal').modal('show');
        };



        $scope.masterDataSetupGridData = [];  // base collection
        $scope.GridDisplayCollection = [].concat($scope.masterDataSetupGridData);


        $scope.ClientReqItem = {
            ReqType: "QV" // Default value set to "Quotation from Vendor"
        };

        $scope.isDuplicateCombination = false;

        $scope.$watchGroup(['ClientReqItem.ServiceCategory', 'ClientReqItem.ServiceItem'], function (newValues) {
            var selectedCategory = newValues[0];
            var selectedItem = newValues[1];

            if (selectedCategory && selectedItem) {
                $scope.isDuplicateCombination = $scope.clientReqItemArray.some(function (item) {
                    return item.ServiceCategoryID === selectedCategory.ServiceCategoryID &&
                        item.ServiceItemID === selectedItem.ServiceItemID;
                });

                if ($scope.isDuplicateCombination) {
                    toastr.error("This Service Category and Item combination already exists in the current Requistion.");
                }
            }
        });

        $scope.AddReqItem = function () {

            if ($scope.ClientReqItem.ServiceCategory.ServiceCategoryID == "") {
                toastr.error("Service Category Required");
                return;
            }
            if ($scope.ClientReqItem.ReqType == "" || $('#ReqType').val() == "") {
                toastr.error("ReqType  Required");
                return;
            }
            if ($scope.ClientReqItem.ServiceItem.ServiceItemID == "") {
                toastr.error("Service Item  Required");
                return;
            }

            if ($scope.ClientReqItem.DeliveryMode == "") {
                toastr.error("Delivery Mode Required.");
                return;
            }

            if ($scope.ClientReqItem.ReqUnit == "") {
                toastr.error("Req Unit Required");
                return;
            }

            if ($('#DeliveryLocation').val() == "") {
                toastr.error("Delivery Location Required");
                return;
            }

            if ($('#DeliveryDate').val() == "") {
                toastr.error("Delivery Date  Required");
                return;
            }

            if ($('#Description').val() == "") {
                toastr.error("Description Required.");
                return;
            }

            if ($('#ReqQnty').val() == "") {
                toastr.error("Requisition Qnty Required");
                return;
            }

            $scope.ClientReqItem.ServiceCategoryID = $scope.ClientReqItem.ServiceCategory.ServiceCategoryID;
            $scope.ClientReqItem.ServiceCategoryName = $scope.ClientReqItem.ServiceCategory.ServiceCategoryName;
            $scope.ClientReqItem.ServiceItemID = $scope.ClientReqItem.ServiceItem.ServiceItemID;
            $scope.ClientReqItem.ServiceItemName = $scope.ClientReqItem.ServiceItem.ServiceItemName;

            $scope.ClientReqItem.DeliveryMode = $scope.ClientReqItem.DeliveryMode;
            $scope.ClientReqItem.ReqUnit = $scope.ClientReqItem.ReqUnit;

            $scope.ClientReqItem.DeliveryLocation = $('#DeliveryLocation').val();
            $scope.ClientReqItem.DeliveryDate = $('#DeliveryDate').val();
            $scope.ClientReqItem.Description = $('#Description').val();
            $scope.ClientReqItem.ReqQnty = $('#ReqQnty').val();

            $scope.clientReqItemArray.push($scope.ClientReqItem);

            $scope.GridDisplayCollection = $scope.GridDisplayCollection.concat($scope.ClientReqItem);

            $scope.resetClientReqItem();
            $("#btnAddReqItem").html('Add');
            $('#RequisitionItemModal').modal('hide');
        }

        $scope.resetClientReqItem = function () {
            $('#DeliveryDate').val('');
            $scope.ClientReqItem = {
                ClientReqItemID: "",
                ClientReqID: "",
                ServiceCategory: { ServiceCategoryID: "", ServiceCategoryName: "" },
                ServiceItem: { ServiceItemID: "", ServiceItemName: "" },
                Description: "",
                DeliveryLocation: "",
                ReqType: "QV",
                DeliveryDate: "",
                DeliveryMode: "",
                ReqQnty: "",
                ReqUnit: ""
            }
        }

        $scope.ShowClientList = function () {
            $http.get("/ClientRequisition/GetClientInfoList")
                .success(function (response) {
                    console.log(response);
                    $scope.ClientList = response.ClientInfoList;
                    $scope.ClientDisplayedCollection = [].concat($scope.ClientList);
                    console.log($scope.ClientDisplayedCollection);
                    $scope.loading = false;
                })
                .error(function () { });

            $('#ClientInfoModal').modal('show');
        };

        var ServiceCategoryID = "";
        $scope.ServiceCategoryChange = function () {
            ServiceCategoryID = $scope.ClientReqItem.ServiceCategory.ServiceCategoryID;
            $http.post("/ServiceItemInfo/GetServiceItemInfoSearchList?ServiceItemCategoryID=" + ServiceCategoryID)
                .success(function (response) {
                    $scope.loading = false;
                    $scope.serviceItems = response.ServiceItemInfoSearchList;
                })
                .error(function () { });
        };

        $scope.clearClientReq = function () {
            $scope.ClientReq = {
                ClientReqID: "",
                ClientID: "",
                ClientCode: "",
                ClientName: "",
                ContactPerson: "",
                ContactNumber: "",
                ClientTINNo: "",
                ClientBINNo: "",
                ClientAddress: "",
                ClientReqNo: "",
                SubmissionDate: "",
                RequisitionDate: "",
                Remarks: ""
            }

            $scope.ClientReqItem = {
                ClientReqItemID: "",
                ClientReqID: "",
                Description: "",
                DeliveryLocation: "",
                DeliveryDate: "",
                ServiceCategory: { ServiceCategoryID: "", ServiceCategoryName: "" },
                ServiceItem: { ServiceItemID: "", ServiceItemName: "" },
                DeliveryMode: "",
                ReqQnty: "",
                ReqUnit: ""
            }
            $scope.ClientReqTerm = {
                ClientReqTermsID: "",
                ClientReqID: "",
                TermsID: "",
                TermsCode: "",
                TermsName: ""
            }
            $("#DeliveryDate").val('');
            $scope.masterDataSetupGridData = [];  // base collection
            $scope.GridDisplayCollection = [].concat($scope.masterDataSetupGridData);

            $scope.ReqTermDataSetupGridData = [];  // base collection
            $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
        }

        $scope.toggleReqItemEdit = function (tableRow, $i) {
            $('#RequisitionItemModal').modal('show');
            $scope.resetClientReqItem();

            $scope.ClientReqItem.ClientReqItemID = tableRow.ClientReqItemID;

            $scope.ClientReqItem.ServiceCategory.ServiceCategoryID = tableRow.ServiceCategoryID;
            $scope.ClientReqItem.ServiceCategory.ServiceCategoryName = tableRow.ServiceCategoryName;
            $scope.ClientReqItem.ServiceItem.ServiceItemID = tableRow.ServiceItemID;
            $scope.ClientReqItem.ServiceItem.ServiceItemName = tableRow.ServiceItemName;

            $scope.ClientReqItem.DeliveryMode = tableRow.DeliveryMode;
            $scope.ClientReqItem.DeliveryLocation = tableRow.DeliveryLocation;
            $scope.ClientReqItem.DeliveryDate = tableRow.DeliveryDate;
            $scope.ClientReqItem.Description = tableRow.Description;

            $scope.ClientReqItem.ReqType = tableRow.ReqType;
            $scope.ClientReqItem.ReqQnty = tableRow.ReqQnty;
            $scope.ClientReqItem.ReqUnit = tableRow.ReqUnit;

            $scope.GridDisplayCollection.splice($i, 1);
            $scope.clientReqItemArray.splice($i, 1);

            $http.post("/ServiceItemInfo/GetServiceItemInfoSearchList?ServiceItemCategoryID=" + tableRow.ServiceCategoryID)
                .success(function (response) {
                    $scope.loading = false;
                    $scope.serviceItems = response.ServiceItemInfoSearchList;
                })
                .error(function () { });

            $("#btnAddReqItem").html('Update');
        };

        $scope.toggleReqItemDelete = function (tableRow, $i) {
            if (!tableRow.ClientReqItemID) {
                $scope.resetClientReqItem();
                $scope.GridDisplayCollection.splice($i, 1);
                $scope.clientReqItemArray.splice($i, 1);
                toastr.success('Data Deleted Successsfully');
            }
            else {
                $scope.resetClientReqItem();
                $scope.ClientReqItem.ClientReqItemID = tableRow.ClientReqItemID;
                $('#deleteReqItemModal').modal('show');
            }
        };

        $scope.DeleteClientReqItem = function () {
            $http.post('/ClientRequisition/DeleteClientReqItemAndTerm',
                { ClientReqItemID: $scope.ClientReqItem.ClientReqItemID, ClientReqTermID: $scope.ClientReqTerm.ClientReqTermID })
                .success(function (response) {
                    if (response.status == "S203") {
                        $scope.resetClientReqItem();
                        $scope.GridDisplayCollection.splice($i, 1);
                        $scope.clientReqItemArray.splice($i, 1);
                        toastr.success('Data Deleted Successsfully');
                        return;
                    }
                });
        }

        ////////////////////////Select for Update from Search grid ///////////////////////

        $scope.toggleClientSelect = function (row) {
            $scope.ClientReq.ClientID = row.ClientID;
            $scope.ClientReq.ClientCode = row.ClientCode;
            $scope.ClientReq.ClientName = row.ClientName;

            $('#ClientInfoModal').modal('hide');
        };

        ///////////////////////Save/Update Master///////////////////////

        //////////////////Search Grid List///////////////////////////////
        $scope.viewonlymode = false;
        $scope.SearchClientReqModal = function () {
            $scope.GetClientReqSearchList();
            $('#SearchClientReqModal').modal('show');
        };

        $scope.GetClientReqSearchList = function () {
            $http.post("/ClientRequisition/GetClientReqSearchList")
                .success(function (response) {
                    $scope.clientReqSearchList = response.clientReqSearchList;
                    $scope.clientReqDisplayedCollection = [].concat($scope.clientReqSearchList);
                })
                .error(function () { });
        }

        ////////////////////////Select for Update from Search grid ///////////////////////

        $scope.toggleClientReqSelect = function (tableRow) {
            $scope.viewonlymode = true;


            $scope.ClientReq.ClientReqID = tableRow.ClientReqID;
            $scope.ClientReq.ClientID = tableRow.ClientID;
            $scope.ClientReq.ClientName = tableRow.ClientName;
            $scope.ClientReq.ClientReqNo = tableRow.ClientReqNo;
            $scope.ClientReq.RequisitionDate = tableRow.RequisitionDate;
            $scope.ClientReq.SubmissionDate = tableRow.SubmissionDate;
            $scope.ClientReq.Remarks = tableRow.Remarks;
            $scope.ClientReq.Status = tableRow.Status;

            $http.post('/ClientRequisition/GetClientReqItemList', { ClientReqID: tableRow.ClientReqID, ReqType: "ALL" })
                .success(function (response) {
                    $scope.masterDataSetupGridData = response.ClientReqItemList;
                    $scope.GridDisplayCollection = [].concat($scope.masterDataSetupGridData);
                    $scope.loading = false;
                }).error(function () {
                    $scope.loading = false;
                });

            $http.post('/ClientRequisition/GetClientReqTermList', { ClientReqID: tableRow.ClientReqID })
                .success(function (response) {
                    $scope.ReqTermDataSetupGridData = response.ClientReqTermList;
                    $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                    $scope.loading = false;
                }).error(function () {
                    $scope.loading = false;
                });

            $('#SearchClientReqModal').modal('hide');
        };

        ///////////////////////////////////////////////

        ////////////////////////Requsition Terms & Conditions ///////////////////////

        $scope.ShowTermsConditionsList = function () {
            $http.get("/ClientRequisition/GetTermsConditionsList")
                .success(function (response) {
                    console.log(response);
                    $scope.TermsConditionsList = response.termsConditionsList;
                    $scope.TermsConditionsDisplayedCollection = [].concat($scope.TermsConditionsList);
                    console.log($scope.TermsConditionsDisplayedCollection);
                    $scope.loading = false;
                })
                .error(function () { });

            $('#ClientReqTermsConditionsModal').modal('show');
        };

        $scope.toggleTermsConditionsSelect = function (row) {
            $scope.ClientReq.TermsID = row.TermsID;
            //$scope.ClientReq.FormCode = row.FormCode;
            $scope.ClientReq.FormName = row.FormName;

            $http.post('/ClientRequisition/GetClientReqTermAgainstFormList', { TermsID: row.TermsID })
                .success(function (response) {
                    $scope.ReqTermDataSetupGridData = response.ClientReqTermList;
                    $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);
                    $scope.loading = false;
                }).error(function () {
                    $scope.loading = false;
                });

            $('#ClientReqTermsConditionsModal').modal('hide');
        };

        $scope.ClientReqTerm = {
            ClientReqTermsID: "",
            ClientReqID: "",
            TermsID: "",
            TermsCode: "",
            TermsName: ""
        }

        $scope.AddReqTermModal = function () {
            if ($('#ClientName').val() == "") {
                toastr.error("Client Name Required");
                return;
            }

            if ($('#ClientReqNo').val() == "") {
                toastr.error("Client ReqNo.  Required");
                return;
            }

            if ($('#SubmissionDate').val() == "") {
                toastr.error("Submission Date Required.");
                return;
            }

            if ($('#RequisitionDate').val() == "") {
                toastr.error("Requisition Date Date Required");
                return;
            }
            $('#RequisitionTermModal').modal('show');
        };


        $scope.ReqTermDataSetupGridData = [];  // base collection
        $scope.ReqTermGridDisplayCollection = [].concat($scope.ReqTermDataSetupGridData);

        $scope.AddReqTerm = function () {

            if ($('#TermsCode').val() == "") {
                toastr.error("Terms Code Required");
                return;
            }

            if ($('#TermsName').val() == "") {
                toastr.error("Terms Name Required.");
                return;
            }

            $scope.ClientReqTerm.TermsCode = $('#TermsCode').val();
            $scope.ClientReqTerm.TermsName = $('#TermsName').val();

            $scope.clientReqTermArray.push($scope.ClientReqTerm);

            $scope.ReqTermGridDisplayCollection = $scope.ReqTermGridDisplayCollection.concat($scope.ClientReqTerm);

            $scope.resetClientReqTerm();
            $("#btnAddReqTerm").html('Add');
            $('#RequisitionTermModal').modal('hide');
        }

        $scope.resetClientReqTerm = function () {
            $scope.ClientReqTerm = {
                ClientReqTermsID: "",
                ClientReqID: "",
                TermsID: "",
                TermsCode: "",
                TermsName: ""
            }
        }

        $scope.toggleReqTermEdit = function (tableRow, $i) {
            $('#RequisitionTermModal').modal('show');
            $scope.resetClientReqTerm();
            $scope.ClientReqTerm.ClientReqTermID = tableRow.ClientReqTermD;
            $scope.ClientReqTerm.ClientReqID = tableRow.ClientReqID;
            $scope.ClientReqTerm.TermsID = tableRow.TermsID;
            $scope.ClientReqTerm.TermsCode = tableRow.TermsCode;
            $scope.ClientReqTerm.TermsName = tableRow.TermsName;
            $scope.ReqTermGridDisplayCollection.splice($i, 1);
            $scope.clientReqTermArray.splice($i, 1);
            $("#btnAddReqTerm").html('Update');
        };

        $scope.toggleReqTermDelete = function (tableRow, $i) {
            if (!tableRow.ClientReqTermID) {
                $scope.resetClientReqTerm();
                $scope.ReqTermGridDisplayCollection.splice($i, 1);
                $scope.clientReqTermArray.splice($i, 1);
                toastr.success('Data Deleted Successsfully');
            }
            else {
                $scope.resetClientReqTerm();
                $scope.ClientReqTerm.ClientReqTermID = tableRow.ClientReqTermID;
                $('#deleteReqTermModal').modal('show');
            }
        };

        $scope.DeleteClientReqTerm = function () {
            $http.post('/ClientRequisition/DeleteClientReqItemAndTerm',
                { ClientReqItemID: $scope.ClientReqItem.ClientReqItemID, ClientReqTermID: $scope.ClientReqTerm.ClientReqTermID })
                .success(function (response) {
                    if (response.status == "S203") {
                        $scope.resetClientReqTerm();
                        $scope.ReqTermGridDisplayCollection.splice($i, 1);
                        $scope.clientReqTermArray.splice($i, 1);
                        toastr.success('Data Deleted Successsfully');
                        return;
                    }
                });
        }

        ///////////////////////////////////////////////

        $scope.uploadedFile = null;

        $scope.fileSelected = function (element) {
            $scope.$apply(function () {
                $scope.uploadedFile = element.files.length > 0 ? element.files[0] : null;
            });
        };

        /////////

        $scope.Post = function () {

            if ($('#ClientName').val() == "") {
                toastr.error("Client Name Required");
                return;
            }

            if ($('#ClientReqNo').val() == "") {
                toastr.error("Client ReqNo.  Required");
                return;
            }

            if ($('#SubmissionDate').val() == "") {
                toastr.error("Submission Date Required.");
                return;
            }

            if ($('#RequisitionDate').val() == "") {
                toastr.error("Requisition Date Date Required");
                return;
            }

            $scope.ClientReq.RequisitionDate = $('#RequisitionDate').val();
            $scope.ClientReq.SubmissionDate = $('#SubmissionDate').val();

            $http.post('/ClientRequisition/SaveClientRequisition',
                {
                    clientReq: $scope.ClientReq,
                    clientReqItem: $scope.GridDisplayCollection,
                    clientReqTerm: $scope.ReqTermGridDisplayCollection
                })
                .success(function (response) {
                    $scope.ClientReq.ClientReqID = response.ClientReqID;
                    if (response.status == "S201") {
                        toastr.success("Data Saved Successfully.");

                        if ($scope.uploadedFile) {
                            $scope.SaveDocument(response.ClientReqID);
                        }

                        $scope.clearClientReq();
                        $scope.toggleRefreshTable();
                        $scope.loading = false;
                        return;
                    }
                    else if (response.status == "S202") {
                        toastr.success("Data Updated Successfully.");
                        $scope.clearClientReq();
                        $scope.loading = false;
                        return;
                    }
                    else if (response.status == "S203") {
                        toastr.success("Data Deleted Successfully.");
                        $scope.clearClientReq();
                        $scope.toggleRefreshTable();
                        $scope.loading = false;
                        return;
                    }
                    else {
                        toastr.error("Data Save Failed.");
                        $scope.loading = false;
                        return;
                    }
                })
                .error(function () {
                    toastr.error("Data Save Failed.");
                    $scope.loading = false;
                    return;
                });
        }

        $scope.toggleRefreshTablemain = function () {
            window.location.reload();
        };




        $scope.DocCrudStatus = "";
        $scope.SaveDocument = function (ClientReqID) {
            $scope.DocCrudStatus = "I";

            var fileUpload = document.getElementById("FileUpload1");
            var files = fileUpload.files;

            if (files.length === 0) {
                toastr.error("Please select a file to upload.");
                return;
            }

            var file = files[0];
            var ext = file.name.split('.').pop().toLowerCase();

            var maxSizeInMB = 2;
            if (file.size > maxSizeInMB * 1024 * 1024) {
                toastr.error("File size must be 2 MB or less.");
                return;
            }

            // Validate file extension
            if (ext !== "pdf") {
                toastr.error("Please upload PDF files only.");
                return;
            }

            $scope.loading = true; // Show loading indicator

            // FTP details
            var ftpDetails = {

                serverIP: "172.16.189.34",
                ftpPort: "21",
                ftpUserName: "silsoft",
                ftpPassword: "s!L@123",
                serverUrl: "MCL/Client_Requisition",
                documentID: "CR_" + ClientReqID,
                ext: "pdf"
            };

            // Helper function to handle file upload
            function uploadFileToServer(file, ftpDetails) {
                var formData = new FormData();
                formData.append("file", file);
                formData.append("serverIP", ftpDetails.serverIP);
                formData.append("ftpPort", ftpDetails.ftpPort);
                formData.append("ftpUserName", ftpDetails.ftpUserName);
                formData.append("ftpPassword", ftpDetails.ftpPassword);
                formData.append("serverUrl", ftpDetails.serverUrl);
                formData.append("documentID", ftpDetails.documentID);
                formData.append("ext", ftpDetails.ext);

                $.ajax({
                    url: '/ClientRequisition/SaveDocument',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (result) {
                        toastr.success("Document uploaded successfully.");
                        resetFileInput();
                        /* $scope.GetDocumentList();*/
                        /* clearDocumentForm();*/
                    },
                    error: function (err) {
                        toastr.error("Document upload failed. Please try again.");
                        console.error(err);
                    },
                    complete: function () {
                        $scope.loading = false;
                    }
                });
            }

            uploadFileToServer(file, ftpDetails);

            // Helper to reset file input field
            function resetFileInput() {
                var fileInput = document.getElementById("FileUpload1");
                fileInput.value = "";
            }

        };

        $scope.ViewDocument = function () {
            $scope.loading = true; // Show loading indicator

            // FTP details
            var ftpDetails = {
                serverIP: "172.16.189.34",
                ftpPort: "21",
                ftpUserName: "silsoft",
                ftpPassword: "s!L@123",
                serverUrl: "MCL/Client_Requisition",
                documentID: "CR_" + $scope.ClientReq.ClientReqID,
                ext: "pdf"
            };

            // Construct URL with query parameters
            var requestUrl = "/ClientRequisition/ViewDocument?" +
                "serverIP=" + encodeURIComponent(ftpDetails.serverIP) +
                "&ftpPort=" + encodeURIComponent(ftpDetails.ftpPort) +
                "&ftpUserName=" + encodeURIComponent(ftpDetails.ftpUserName) +
                "&ftpPassword=" + encodeURIComponent(ftpDetails.ftpPassword) +
                "&serverUrl=" + encodeURIComponent(ftpDetails.serverUrl) +
                "&DocID=" + encodeURIComponent(ftpDetails.documentID) +
                "&ext=" + encodeURIComponent(ftpDetails.ext);

            // Make GET request to fetch the PDF
            $http.get(requestUrl, { responseType: 'arraybuffer' })
                .then(function (response) {
                    var file = new Blob([response.data], { type: 'application/pdf' });
                    var fileURL = URL.createObjectURL(file);
                    let zoomParam = "#view=Fit";

                    $("#pdfViewer").attr("src", fileURL + zoomParam);
                    $('#ShowPDFModal').modal('show');
                })
                .catch(function (error) {
                    toastr.error("Failed to load the PDF.");
                    console.error(error);
                })
                .finally(function () {
                    $scope.loading = false; // Hide the loading indicator
                });
        };



        $scope.toggleRefreshTable = function () {

            $timeout(function () {
                // Reload the current page
                window.location.reload();
            }, 2000);

        };



    }]);
</script>
